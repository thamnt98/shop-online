{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Service/AddService/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification, Row, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getListShop, addService, getListCustomerType } from \"../../../service/handleRequest\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          addService(values).then(function (res) {\n            if (res.status == 200) {\n              _this.setState({\n                loader: true\n              });\n\n              _this.openNotificationWithIcon(\"success\", \"Add  service success\");\n\n              _this.props.history.replace(\"/service\");\n            }\n          }).catch(function (e) {\n            _this.setState({\n              loader: false\n            });\n\n            _this.openNotificationWithIcon(\"error\", \"This  service exist\");\n          });\n        }\n      });\n    };\n\n    _this.styleLoader = {\n      position: \"sticky\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      zIndex: 1,\n      background: \"#fff\"\n    };\n\n    _this.handleBlur = function (e) {\n      var value = e.target.value;\n\n      if (value.length == 0) {\n        _this.props.form.setFieldsValue({\n          child_count: 0,\n          fee: 0\n        });\n      }\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      service: [],\n      shopName: [],\n      shops: [],\n      customerType: [],\n      listService: [],\n      loader: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getListShop.then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          shopName: data,\n          loader: false\n        });\n      });\n      getListCustomerType().then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          customerType: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          shopName = _this$state.shopName,\n          customerType = _this$state.customerType,\n          loader = _this$state.loader;\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        style: this.styleLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Create Service\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.onSubmit,\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Service name\",\n        className: \"normal_login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, getFieldDecorator(\"service_name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your service name!\"\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"\\u5B9A\\u671F\\u30D1\\u30B9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Service type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, getFieldDecorator(\"customer_type_id\", {\n        rules: [{\n          required: true,\n          message: \"Please input your service type!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Service type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, customerType.map(function (type, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: type.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, type.customer_type);\n      })))), React.createElement(Form.Item, {\n        label: \"Price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, getFieldDecorator(\"fee\", {\n        initialValue: 0,\n        rules: [{\n          required: true,\n          message: \"Please input your fee!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Price must be number and greater than zero!\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Service Introduction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, getFieldDecorator(\"service_description\", {})(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, getFieldDecorator(\"shop_id\", {\n        rules: [{\n          required: true,\n          message: \"Please input your store name!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Shop name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, shopName.map(function (shop, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: shop.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, shop.shopName);\n      })))), React.createElement(Form.Item, {\n        label: \"Number of children\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, getFieldDecorator(\"child_count\", {\n        initialValue: 0,\n        rules: [{\n          required: true,\n          message: \"Please input your child count!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Number of children must be number and  greater than zero!!\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/service\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Form.create()(Index);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Service/AddService/index.js"],"names":["React","Component","Form","Select","Input","Button","Card","notification","Row","Col","Link","getListShop","addService","getListCustomerType","connect","CircularProgress","Index","props","openNotificationWithIcon","type","message","onSubmit","e","preventDefault","form","validateFields","err","values","then","res","status","setState","loader","history","replace","catch","styleLoader","position","top","left","width","zIndex","background","handleBlur","value","target","length","setFieldsValue","child_count","fee","formItemLayout","labelCol","sm","span","wrapperCol","state","service","shopName","shops","customerType","listService","data","getFieldDecorator","rules","required","map","i","id","customer_type","initialValue","pattern","RegExp","shop","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Form,\n  Select,\n  Input,\n  Button,\n  Card,\n  notification,\n  Row,\n  Col\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getListShop,\n  addService,\n  getListCustomerType\n} from \"../../../service/handleRequest\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: [],\n      shopName: [],\n      shops: [],\n      customerType: [],\n      listService: [],\n      loader: false\n    };\n  }\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  componentDidMount() {\n    getListShop.then(({ data }) => {\n      this.setState({ shopName: data, loader: false });\n    });\n    getListCustomerType().then(({ data }) => {\n      this.setState({ customerType: data });\n    });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        addService(values)\n          .then(res => {\n            if (res.status == 200) {\n              this.setState({ loader: true });\n              this.openNotificationWithIcon(\"success\", \"Add  service success\");\n              this.props.history.replace(`/service`);\n            }\n          })\n          .catch(e => {\n            this.setState({ loader: false });\n            this.openNotificationWithIcon(\"error\", \"This  service exist\");\n          });\n      }\n    });\n  };\n\n  styleLoader = {\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"#fff\"\n  };\n\n  handleBlur = e => {\n    var value = e.target.value;\n    if (value.length == 0) {\n      this.props.form.setFieldsValue({\n        child_count: 0,\n        fee: 0\n      });\n    }\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { shopName, customerType, loader } = this.state;\n    return (\n      <div style={{ position: \"relative\" }}>\n        {loader ? (\n          <div className=\"gx-loader-view\" style={this.styleLoader}>\n            <CircularProgress />\n          </div>\n        ) : null}\n\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Create Service</h3>\n        </div>\n        <Card>\n          <Form\n            {...this.formItemLayout}\n            onSubmit={this.onSubmit}\n            className=\"form-shape\"\n          >\n            <Form.Item label=\"Service name\" className=\"normal_login\">\n              {getFieldDecorator(\"service_name\", {\n                rules: [\n                  { required: true, message: \"Please input your service name!\" }\n                ]\n              })(<Input placeholder=\"定期パス\" />)}\n            </Form.Item>\n            <Form.Item label=\"Service type\">\n              {getFieldDecorator(\"customer_type_id\", {\n                rules: [\n                  { required: true, message: \"Please input your service type!\" }\n                ]\n              })(\n                <Select placeholder=\"Service type\">\n                  {customerType.map(function(type, i) {\n                    return (\n                      <option key={i} value={type.id}>\n                        {type.customer_type}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Price\">\n              {getFieldDecorator(\"fee\", {\n                initialValue: 0,\n                rules: [\n                  { required: true, message: \"Please input your fee!\" },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Price must be number and greater than zero!\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <Form.Item label=\"Service Introduction\">\n              {getFieldDecorator(\"service_description\", {})(\n                <Input placeholder=\"Some description\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Store name\">\n              {getFieldDecorator(\"shop_id\", {\n                rules: [\n                  { required: true, message: \"Please input your store name!\" }\n                ]\n              })(\n                <Select placeholder=\"Shop name\">\n                  {shopName.map(function(shop, i) {\n                    return (\n                      <option key={i} value={shop.id}>\n                        {shop.shopName}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Number of children\">\n              {getFieldDecorator(\"child_count\", {\n                initialValue: 0,\n                rules: [\n                  { required: true, message: \"Please input your child count!\" },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message:\n                      \"Number of children must be number and  greater than zero!!\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <div className=\"dp-flex-jf-center dp-flex\">\n              <Button type=\"primary\" htmlType=\"submit\">\n                Save\n              </Button>\n              <Link to=\"/service\">\n                <Button>Back</Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(Index);\n"]},"metadata":{},"sourceType":"module"}