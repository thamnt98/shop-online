{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nvar history = createHistory();\nvar routeMiddleware = routerMiddleware(history);\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware, routeMiddleware];\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  var store = createStore(reducers, initialState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', function () {\n      var nextRootReducer = require('../reducers/index');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/appRedux/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","routerMiddleware","createHistory","createSagaMiddleware","rootSaga","history","routeMiddleware","sagaMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,OAAO,GAAGH,aAAa,EAA7B;AACA,IAAMI,eAAe,GAAGL,gBAAgB,CAACI,OAAD,CAAxC;AACA,IAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,IAAMK,WAAW,GAAG,CAACD,cAAD,EAAiBD,eAAjB,CAApB;AACA,IAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cb,OAAxE;AAEA,eAAe,SAASc,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAMC,KAAK,GAAGf,WAAW,CAACC,QAAD,EAAWa,YAAX,EACvBJ,gBAAgB,CAACZ,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CADO,CAAzB;AAGAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBX,QAAnB;;AAEA,MAAIY,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,YAAM;AAC3C,UAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AACD,SAAOL,KAAP;AACD;AACD,SAAQT,OAAR","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport reducers from \"../reducers/index\";\r\nimport {routerMiddleware} from \"react-router-redux\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst history = createHistory();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware, routeMiddleware];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(reducers, initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers/index', () => {\r\n      const nextRootReducer = require('../reducers/index');\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n  return store;\r\n}\r\nexport {history};\r\n"]},"metadata":{},"sourceType":"module"}