{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Service/EditService/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { formItemLayout } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getListShop, editService, getListCustomerType, getServiceById } from \"../../../service/handleRequest\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var id = _this.props.match.params.id;\n          editService(id, values).then(function (res) {\n            if (res.status == 200) {\n              _this.openNotificationWithIcon(\"success\", \"Edit service success\");\n\n              _this.props.history.replace(\"/service\");\n            }\n          }).catch(function (e) {\n            _this.openNotificationWithIcon(\"error\", \"Service name exist!\");\n          });\n        }\n      });\n    };\n\n    _this.styleLoader = {\n      position: \"sticky\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      zIndex: 1,\n      background: \"#fff\"\n    };\n\n    _this.handleBlur = function (e) {\n      var service = _this.state.service;\n      var value = e.target.value;\n\n      if (value.length == 0) {\n        _this.props.form.setFieldsValue({\n          child_count: service[\"child_count\"],\n          fee: service[\"fee\"]\n        });\n      }\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      service: [],\n      shopName: [],\n      customerType: [],\n      idService: \"\",\n      loader: true\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var id = this.props.match.params.id;\n      this.setState({\n        idService: id\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getServiceById(this.state.idService).then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          service: data,\n          loader: false\n        });\n      });\n      getListShop.then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          shopName: data\n        });\n      });\n      getListCustomerType().then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          customerType: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          shopName = _this$state.shopName,\n          customerType = _this$state.customerType,\n          service = _this$state.service,\n          active = _this$state.active,\n          loader = _this$state.loader;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        style: this.styleLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Edit Service\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, this.formItemLayout, {\n        onSubmit: this.onSubmit,\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Serivce name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, getFieldDecorator(\"service_name\", {\n        initialValue: service[\"service_name\"],\n        rules: [{\n          required: true,\n          message: \"Please input your service name!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Service type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, getFieldDecorator(\"customer_type_id\", {\n        initialValue: service[\"customer_type_id\"],\n        rules: [{\n          required: true,\n          message: \"Please input your service type!\"\n        }]\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, customerType.map(function (type, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: type.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, type.customer_type);\n      })))), React.createElement(Form.Item, {\n        label: \"Fee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, getFieldDecorator(\"fee\", {\n        initialValue: service[\"fee\"],\n        rules: [{\n          required: true,\n          message: \"Please input  price of service\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Price must be number and greater than zero !\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Service Introduction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, getFieldDecorator(\"service_description\", {})(React.createElement(Input, {\n        placeholder: \"some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, getFieldDecorator(\"shop_id\", {\n        initialValue: service[\"shop_id\"],\n        rules: [{\n          required: true,\n          message: \" Please input shop name!\"\n        }]\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, shopName.map(function (shop, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: shop.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, shop.shopName);\n      })))), React.createElement(Form.Item, {\n        label: \"Number of children\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, getFieldDecorator(\"child_count\", {\n        initialValue: service[\"child_count\"],\n        rules: [{\n          required: true,\n          message: \"Please input your number of children!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Number of children must be number and greater than zero !\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/service\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Form.create()(Index);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Service/EditService/index.js"],"names":["React","Component","Form","Select","Input","Button","Card","notification","formItemLayout","Link","getListShop","editService","getListCustomerType","getServiceById","CircularProgress","Index","props","openNotificationWithIcon","type","message","onSubmit","e","preventDefault","form","validateFields","err","values","id","match","params","then","res","status","history","replace","catch","styleLoader","position","top","left","width","zIndex","background","handleBlur","service","state","value","target","length","setFieldsValue","child_count","fee","labelCol","sm","span","wrapperCol","shopName","customerType","idService","loader","setState","data","getFieldDecorator","active","initialValue","rules","required","map","i","customer_type","pattern","RegExp","shop","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { formItemLayout } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getListShop,\n  editService,\n  getListCustomerType,\n  getServiceById\n} from \"../../../service/handleRequest\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: [],\n      shopName: [],\n      customerType: [],\n      idService: \"\",\n      loader: true\n    };\n  }\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  componentWillMount() {\n    const { id } = this.props.match.params;\n    this.setState({ idService: id });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { id } = this.props.match.params;\n        editService(id, values)\n          .then(res => {\n            if (res.status == 200) {\n              this.openNotificationWithIcon(\"success\", \"Edit service success\");\n              this.props.history.replace(`/service`);\n            }\n          })\n          .catch(e => {\n            this.openNotificationWithIcon(\"error\", \"Service name exist!\");\n          });\n      }\n    });\n  };\n\n  componentDidMount() {\n    getServiceById(this.state.idService).then(({ data }) => {\n      this.setState({ service: data, loader: false });\n    });\n    getListShop.then(({ data }) => {\n      this.setState({ shopName: data });\n    });\n    getListCustomerType().then(({ data }) => {\n      this.setState({ customerType: data });\n    });\n  }\n\n  styleLoader = {\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"#fff\"\n  };\n\n  handleBlur = e => {\n    const { service } = this.state;\n    var value = e.target.value;\n    if (value.length == 0) {\n      this.props.form.setFieldsValue({\n        child_count: service[\"child_count\"],\n        fee: service[\"fee\"]\n      });\n    }\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { shopName, customerType, service, active, loader } = this.state;\n    return (\n      <div>\n        {loader ? (\n          <div className=\"gx-loader-view\" style={this.styleLoader}>\n            <CircularProgress />\n          </div>\n        ) : null}\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Edit Service</h3>\n        </div>\n        <Card>\n          <Form\n            {...formItemLayout}\n            {...this.formItemLayout}\n            onSubmit={this.onSubmit}\n            className=\"form-shape\"\n          >\n            <Form.Item label=\"Serivce name\">\n              {getFieldDecorator(\"service_name\", {\n                initialValue: service[\"service_name\"],\n                rules: [\n                  { required: true, message: \"Please input your service name!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Service type\">\n              {getFieldDecorator(\"customer_type_id\", {\n                initialValue: service[\"customer_type_id\"],\n                rules: [\n                  { required: true, message: \"Please input your service type!\" }\n                ]\n              })(\n                <Select>\n                  {customerType.map(function(type, i) {\n                    return (\n                      <option key={i} value={type.id}>\n                        {type.customer_type}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Fee\">\n              {getFieldDecorator(\"fee\", {\n                initialValue: service[\"fee\"],\n                rules: [\n                  { required: true, message: \"Please input  price of service\" },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Price must be number and greater than zero !\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <Form.Item label=\"Service Introduction\">\n              {getFieldDecorator(\"service_description\", {})(\n                <Input placeholder=\"some description\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Store name\">\n              {getFieldDecorator(\"shop_id\", {\n                initialValue: service[\"shop_id\"],\n                rules: [{ required: true, message: \" Please input shop name!\" }]\n              })(\n                <Select>\n                  {shopName.map(function(shop, i) {\n                    return (\n                      <option key={i} value={shop.id}>\n                        {shop.shopName}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Number of children\">\n              {getFieldDecorator(\"child_count\", {\n                initialValue: service[\"child_count\"],\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your number of children!\"\n                  },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message:\n                      \"Number of children must be number and greater than zero !\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <div className=\"dp-flex-jf-center dp-flex\">\n              <Button htmlType=\"submit\" type=\"primary\">\n                Save\n              </Button>\n              <Link to=\"/service\">\n                <Button>Back</Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(Index);\n"]},"metadata":{},"sourceType":"module"}