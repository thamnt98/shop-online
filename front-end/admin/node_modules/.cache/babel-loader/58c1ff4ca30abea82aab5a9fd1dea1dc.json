{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Color/New/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { addColor } from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\n\nvar NewColor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewColor, _Component);\n\n  function NewColor(props) {\n    var _this;\n\n    _classCallCheck(this, NewColor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewColor).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          addColor(values).then(function () {\n            _this.openNotificationWithIcon(\"success\", \"Add color success!\");\n\n            _this.props.history.replace(\"/color\");\n          }).catch(function (e) {\n            var errors = e.response.data.errors;\n            if (errors.color_name) _this.openNotificationWithIcon(\"error\", errors.color_name);\n          });\n        }\n      });\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(NewColor, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Create Color\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.handleSubmit,\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Color name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, getFieldDecorator(\"color_name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your color name!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"RGB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, getFieldDecorator(\"rgb\", {})(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return NewColor;\n}(Component);\n\nexport default Form.create()(NewColor);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Color/New/index.js"],"names":["React","Component","Form","Input","Button","Card","notification","Link","addColor","NewColor","props","openNotificationWithIcon","type","message","handleSubmit","e","preventDefault","form","validateFields","err","values","then","history","replace","catch","errors","response","data","color_name","formItemLayout","labelCol","sm","span","wrapperCol","getFieldDecorator","rules","required","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { addColor } from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\nclass NewColor extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        addColor(values)\n          .then(() => {\n            this.openNotificationWithIcon(\"success\", \"Add color success!\");\n            this.props.history.replace(`/color`);\n          })\n          .catch(e => {\n            var errors = e.response.data.errors;\n            if (errors.color_name)\n              this.openNotificationWithIcon(\"error\", errors.color_name);\n          });\n      }\n    });\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n      <div className=\"title-header\">\n      <h3 className=\"text-title\">Create Color</h3>\n      </div>\n        <Card>\n          <Form\n            {...this.formItemLayout}\n            onSubmit={this.handleSubmit}\n            className=\"form-shape\"\n          >\n            <Form.Item label=\"Color name\">\n              {getFieldDecorator(\"color_name\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your color name!\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"RGB\">\n              {getFieldDecorator(\"rgb\", {})(<Input />)}\n            </Form.Item>\n\n            <div className=\"dp-flex-jf-center dp-flex\">\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={this.handleSubmit}\n              >\n                Save\n              </Button>\n              <Link to=\"/color\">\n                <Button>\n                  Back\n                </Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(NewColor);\n"]},"metadata":{},"sourceType":"module"}