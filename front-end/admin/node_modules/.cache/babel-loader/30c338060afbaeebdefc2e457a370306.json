{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Color/Edit/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { updateColor, detailColor } from \"../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar EditColor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditColor, _Component);\n\n  function EditColor(props) {\n    var _this;\n\n    _classCallCheck(this, EditColor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditColor).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          updateColor(_this.props.match.params.id, values).then(function (res) {\n            var data = res.data;\n\n            _this.setState({\n              color: data\n            });\n\n            _this.openNotificationWithIcon(\"success\", \"Edit color success!\");\n\n            _this.props.history.replace(\"/color\");\n          }).catch(function (e) {\n            var errors = e.response.data.errors;\n            if (errors.color_name) _this.openNotificationWithIcon(\"error\", errors.color_name);\n          });\n        }\n      });\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      color: {}\n    };\n    return _this;\n  }\n\n  _createClass(EditColor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      detailColor(this.props.match.params.id).then(function (response) {\n        var data = response.data;\n\n        _this2.setState({\n          color: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.state.color;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Edit Color\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        className: \"form-shape\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Color name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, getFieldDecorator(\"color_name\", {\n        initialValue: color.color_name,\n        rules: [{\n          required: true,\n          message: \"Please input your store code!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"RGB \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, getFieldDecorator(\"rgb\", {\n        initialValue: color.rgb\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return EditColor;\n}(Component);\n\nexport default Form.create()(EditColor);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Color/Edit/index.js"],"names":["React","Component","Form","Input","Button","Card","notification","Link","updateColor","detailColor","EditColor","props","openNotificationWithIcon","type","message","handleSubmit","e","preventDefault","form","validateFields","err","values","match","params","id","then","res","data","setState","color","history","replace","catch","errors","response","color_name","formItemLayout","labelCol","sm","span","wrapperCol","state","getFieldDecorator","initialValue","rules","required","rgb","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { updateColor, detailColor } from \"../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass EditColor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: {}\n    };\n  }\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n  componentDidMount() {\n    detailColor(this.props.match.params.id).then(response => {\n      var data = response.data;\n      this.setState({ color: data });\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        updateColor(this.props.match.params.id, values)\n          .then(res => {\n            var data = res.data;\n            this.setState({ color: data });\n            this.openNotificationWithIcon(\"success\", \"Edit color success!\");\n            this.props.history.replace(`/color`);\n          })\n          .catch(e => {\n            var errors = e.response.data.errors;\n            if (errors.color_name)\n              this.openNotificationWithIcon(\"error\", errors.color_name);\n          });\n      }\n    });\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    let color = this.state.color;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Edit Color</h3>\n        </div>\n        <Card>\n          <Form\n            {...this.formItemLayout}\n            className=\"form-shape\"\n            onSubmit={this.handleSubmit}\n          >\n            <Form.Item label=\"Color name\">\n              {getFieldDecorator(\"color_name\", {\n                initialValue: color.color_name,\n                rules: [\n                  { required: true, message: \"Please input your store code!\" }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label=\"RGB \">\n              {getFieldDecorator(\"rgb\", {\n                initialValue: color.rgb\n              })(<Input />)}\n            </Form.Item>\n\n            <div className=\"dp-flex-jf-center dp-flex\">\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={this.handleSubmit}\n              >\n                Save\n              </Button>\n              <Link to=\"/color\">\n                <Button>Back</Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(EditColor);\n"]},"metadata":{},"sourceType":"module"}