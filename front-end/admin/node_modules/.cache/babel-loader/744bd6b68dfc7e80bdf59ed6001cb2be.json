{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Producer/ProducerEditPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport { listPref, getListShop, getZipCode, getPrefById, addProducer, getProducerById, editProducer } from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          editProducer(_this.state.id, values).then(function (res) {\n            if (res.status == 200) {\n              _this.openNotificationWithIcon(\"success\", \"Edit  producer success\");\n\n              _this.props.history.replace(\"/producers\");\n            }\n          }).catch(function (e) {\n            _this.openNotificationWithIcon(\"error\", \"This  producer exist\");\n          });\n        }\n      });\n    };\n\n    _this.handleBlur = function (e) {\n      getZipCode(e.target.value).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          zipcode: data\n        });\n\n        var zipcode = _this.state.zipcode;\n        getPrefById(zipcode[\"pref_id\"]).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this.setState({\n            city: data[\"id\"]\n          }, function () {\n            _this.props.form.setFieldsValue({\n              ward: zipcode[\"ward\"],\n              addr1: zipcode[\"addr1\"],\n              pref_id: _this.state.city\n            });\n          });\n        });\n      });\n    };\n\n    _this.styleLoader = {\n      position: \"sticky\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      zIndex: 1,\n      background: \"#fff\"\n    };\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      prefs: [],\n      shops: [],\n      zipcode: [],\n      city: \"\",\n      id: \"\",\n      producer: [],\n      loader: true\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var idProducer = this.props.match.params;\n      this.setState({\n        id: idProducer.id\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getProducerById(this.state.id).then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          producer: data,\n          loader: false\n        });\n      });\n      listPref().then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this2.setState({\n          prefs: data\n        });\n      });\n      getListShop.then(function (_ref5) {\n        var data = _ref5.data;\n\n        _this2.setState({\n          shops: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          prefs = _this$state.prefs,\n          shops = _this$state.shops,\n          producer = _this$state.producer,\n          loader = _this$state.loader;\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        style: this.styleLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Edit Manufacturers\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        className: \"form-shape\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Producer code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, getFieldDecorator(\"maker_code\", {\n        initialValue: producer[\"makerCode\"],\n        rules: [{\n          required: true,\n          message: \"Please input your  producer code!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Post code must be number !\"\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"1234\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Manufacturer name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, getFieldDecorator(\"maker_name\", {\n        initialValue: producer[\"makerName\"],\n        rules: [{\n          required: true,\n          message: \"Please input your Manufacturer name!\"\n        }]\n      })(React.createElement(Input, {\n        placeholder: \"abc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, getFieldDecorator(\"shop_id\", {\n        initialValue: producer[\"shop_id\"],\n        rules: [{\n          required: true,\n          message: \"Please input your store name!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Shop name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, shops.map(function (shop, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: shop.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, shop.shopName);\n      })))), React.createElement(Form.Item, {\n        label: \"Phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, getFieldDecorator(\"tel\", {\n        initialValue: producer[\"phoneNumber\"],\n        rules: [{\n          required: true,\n          message: \"Please input your phone number!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Phone number must be number !\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Post code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, getFieldDecorator(\"zipcode\", {\n        initialValue: producer[\"zipCode\"],\n        rules: [{\n          required: true,\n          message: \"Please input your post code!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Post code must be number !\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, getFieldDecorator(\"pref_id\", {\n        initialValue: producer[\"pref_id\"],\n        rules: [{\n          required: true,\n          message: \"Please input your City!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, prefs.map(function (pref, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: pref.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, pref.name);\n      })))), React.createElement(Form.Item, {\n        label: \"District\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, getFieldDecorator(\"ward\", {\n        initialValue: producer[\"ward\"]\n      })(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Town\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, getFieldDecorator(\"addr1\", {\n        initialValue: producer[\"addr1\"]\n      })(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Detailed address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, getFieldDecorator(\"addr2\", {\n        initialValue: producer[\"addr2\"]\n      })(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/producers\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Back\")))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Form.create()(Index);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Producer/ProducerEditPage/index.js"],"names":["React","Component","Form","Select","Input","Button","Card","notification","Link","CircularProgress","listPref","getListShop","getZipCode","getPrefById","addProducer","getProducerById","editProducer","Index","props","openNotificationWithIcon","type","message","onSubmit","e","preventDefault","form","validateFields","err","values","state","id","then","res","status","history","replace","catch","handleBlur","target","value","data","setState","zipcode","city","setFieldsValue","ward","addr1","pref_id","styleLoader","position","top","left","width","zIndex","background","formItemLayout","labelCol","sm","span","wrapperCol","prefs","shops","producer","loader","idProducer","match","params","getFieldDecorator","initialValue","rules","required","pattern","RegExp","map","shop","i","shopName","pref","name","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport {\n  listPref,\n  getListShop,\n  getZipCode,\n  getPrefById,\n  addProducer,\n  getProducerById,\n  editProducer\n} from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prefs: [],\n      shops: [],\n      zipcode: [],\n      city: \"\",\n      id: \"\",\n      producer: [],\n      loader: true\n    };\n  }\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n  componentWillMount() {\n    const idProducer = this.props.match.params;\n    this.setState({ id: idProducer.id });\n  }\n  componentDidMount() {\n    getProducerById(this.state.id).then(({ data }) => {\n      this.setState({ producer: data, loader: false });\n    });\n    listPref().then(({ data }) => {\n      this.setState({ prefs: data });\n    });\n    getListShop.then(({ data }) => {\n      this.setState({ shops: data });\n    });\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        editProducer(this.state.id, values)\n          .then(res => {\n            if (res.status == 200) {\n              this.openNotificationWithIcon(\n                \"success\",\n                \"Edit  producer success\"\n              );\n              this.props.history.replace(`/producers`);\n            }\n          })\n          .catch(e => {\n            this.openNotificationWithIcon(\"error\", \"This  producer exist\");\n          });\n      }\n    });\n  };\n  handleBlur = e => {\n    getZipCode(e.target.value).then(({ data }) => {\n      this.setState({ zipcode: data });\n      const { zipcode } = this.state;\n      getPrefById(zipcode[\"pref_id\"]).then(({ data }) => {\n        this.setState({ city: data[\"id\"] }, () => {\n          this.props.form.setFieldsValue({\n            ward: zipcode[\"ward\"],\n            addr1: zipcode[\"addr1\"],\n            pref_id: this.state.city\n          });\n        });\n      });\n    });\n  };\n  styleLoader = {\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"#fff\"\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { prefs, shops, producer, loader } = this.state;\n    return (\n      <div style={{ position: \"relative\" }}>\n        {loader ? (\n          <div className=\"gx-loader-view\" style={this.styleLoader}>\n            <CircularProgress />\n          </div>\n        ) : null}\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Edit Manufacturers</h3>\n          </div>\n        <Card>\n          <Form\n          {...this.formItemLayout}\n          className=\"form-shape\"\n            onSubmit={this.onSubmit}\n          >\n            <Form.Item label=\"Producer code\">\n              {getFieldDecorator(\"maker_code\", {\n                initialValue: producer[\"makerCode\"],\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your  producer code!\"\n                  },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Post code must be number !\"\n                  }\n                ]\n              })(<Input placeholder=\"1234\" />)}\n            </Form.Item>\n            <Form.Item label=\"Manufacturer name\">\n              {getFieldDecorator(\"maker_name\", {\n                initialValue: producer[\"makerName\"],\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your Manufacturer name!\"\n                  }\n                ]\n              })(<Input placeholder=\"abc\" />)}\n            </Form.Item>\n            <Form.Item label=\"Store name\">\n              {getFieldDecorator(\"shop_id\", {\n                initialValue: producer[\"shop_id\"],\n                rules: [\n                  { required: true, message: \"Please input your store name!\" }\n                ]\n              })(\n                <Select placeholder=\"Shop name\">\n                  {shops.map(function(shop, i) {\n                    return (\n                      <option key={i} value={shop.id}>\n                        {shop.shopName}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Phone number\">\n              {getFieldDecorator(\"tel\", {\n                initialValue: producer[\"phoneNumber\"],\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your phone number!\"\n                  },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Phone number must be number !\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Post code\">\n              {getFieldDecorator(\"zipcode\", {\n                initialValue: producer[\"zipCode\"],\n                rules: [\n                  { required: true, message: \"Please input your post code!\" },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Post code must be number !\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n              {getFieldDecorator(\"pref_id\", {\n                initialValue: producer[\"pref_id\"],\n                rules: [{ required: true, message: \"Please input your City!\" }]\n              })(\n                <Select placeholder=\"City\">\n                  {prefs.map(function(pref, i) {\n                    return (\n                      <option key={i} value={pref.id}>\n                        {pref.name}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"District\">\n              {getFieldDecorator(\"ward\", {\n                initialValue: producer[\"ward\"]\n              })(<Input placeholder=\"Some description\" />)}\n            </Form.Item>\n            <Form.Item label=\"Town\">\n              {getFieldDecorator(\"addr1\", {\n                initialValue: producer[\"addr1\"]\n              })(<Input placeholder=\"Some description\" />)}\n            </Form.Item>\n            <Form.Item label=\"Detailed address\">\n              {getFieldDecorator(\"addr2\", {\n                initialValue: producer[\"addr2\"]\n              })(<Input placeholder=\"Some description\" />)}\n            </Form.Item>\n                  <div className=\"dp-flex-jf-center dp-flex\">\n              <Button htmlType=\"submit\" type=\"primary\">\n                Save\n              </Button>\n              <Link to=\"/producers\" className=\"ant-btn\">\n                  Back\n              </Link>\n              </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(Index);\n"]},"metadata":{},"sourceType":"module"}