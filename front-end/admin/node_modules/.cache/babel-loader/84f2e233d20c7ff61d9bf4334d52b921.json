{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Staff/AddStaffPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Form, Input, Cascader, Button, Radio, notification } from \"antd\";\nimport { getListShop, listPref, getStaff, createStaff, updateStaff, updateZipcode } from \"../../../service/handleRequest\";\nimport { Link } from 'react-router-dom';\nimport CircularProgress from \"components/CircularProgress/index\";\nimport '../../../styles/customerStyle/index.css';\n\nvar AddStaffPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddStaffPage, _Component);\n\n  function AddStaffPage(props) {\n    var _this;\n\n    _classCallCheck(this, AddStaffPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddStaffPage).call(this, props));\n\n    _this.renderInitCascader = function (value) {\n      if (!value) return [];\n      return [value];\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      var id = _this.props.match.params.id;\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var obj = {\n            pref_id: values.city[0],\n            ward: values.district,\n            addr1: values.homeAddress,\n            is_parttime: values.partTime,\n            password: values.password,\n            tel: values.phoneNumber,\n            shop_id: values.shop[0],\n            name: values.staffName,\n            addr2: values.underDistrict,\n            username: values.username,\n            zipcode: values.zipcode\n          };\n          if (!id) _this.doCreateSubmit(obj);else _this.doUpdateSubmit(obj, id);\n        }\n      });\n    };\n\n    _this.handelBlur = function (e) {\n      var value = e.target.value;\n      updateZipcode(value).then(function (res) {\n        console.log(res.data);\n        var staff = _this.state.staff;\n        staff.city = res.data.pref_id;\n        staff.disitrict = res.data.ward;\n        staff.underDistrict = res.data.addr1;\n        staff.homeAddress = res.data.addr2;\n\n        _this.setState({\n          staff: staff\n        });\n      }).catch(function (ex) {});\n    };\n\n    _this.state = {\n      staff: {\n        username: \"\",\n        staffName: \"\",\n        password: \"\",\n        shop: \"\",\n        city: '',\n        parttime: \"\",\n        phoneNumber: \"\",\n        zipCode: \"\",\n        disitrict: \"\",\n        underDistrict: \"\",\n        homeAddress: \"\"\n      },\n      shops: [],\n      cities: [],\n      loader: true\n    };\n    return _this;\n  }\n\n  _createClass(AddStaffPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.props.match.params.id;\n      getListShop.then(function (response) {\n        var shops = response.data.map(function (shop) {\n          return {\n            value: shop.id,\n            label: shop.shopName\n          };\n        });\n\n        _this2.setState({\n          shops: shops\n        });\n\n        if (!id) {\n          _this2.setState({\n            loader: false\n          });\n        }\n      }).catch(function (ex) {});\n      listPref().then(function (response) {\n        var cities = response.data.map(function (city) {\n          return {\n            value: city.id,\n            label: city.name\n          };\n        });\n\n        _this2.setState({\n          cities: cities\n        });\n      }).catch(function (ex) {});\n\n      if (!id) {\n        return;\n      }\n\n      getStaff(id).then(function (response) {\n        var staff = {\n          username: response.data.data.attributes.username,\n          staffName: response.data.data.attributes.name,\n          shop: response.data.data.attributes.shop,\n          city: response.data.data.attributes.city,\n          parttime: response.data.data.attributes.parttime,\n          phoneNumber: response.data.data.attributes.tel,\n          zipCode: response.data.data.attributes.zipcode,\n          disitrict: response.data.data.attributes.ward,\n          underDistrict: response.data.data.attributes.addr1,\n          homeAddress: response.data.data.attributes.addr2\n        };\n\n        _this2.setState({\n          staff: staff,\n          loader: false\n        });\n      }).catch(function (ex) {\n        _this2.openNotificationWithIcon(\"error\", \"Server error\");\n      });\n    }\n  }, {\n    key: \"doCreateSubmit\",\n    value: function doCreateSubmit(staff) {\n      var _this3 = this;\n\n      createStaff(staff).then(function (response) {\n        _this3.openNotificationWithIcon(\"success\", \"Create staff success.\");\n\n        _this3.props.history.replace(\"/staffs\");\n      }).catch(function (ex) {\n        if (ex.response && ex.response.status === 422) {\n          if (ex.response.data.errors.username) _this3.openNotificationWithIcon(\"error\", \"Username is exist.\");\n        } else {\n          _this3.openNotificationWithIcon(\"error\", \"Server error\");\n        }\n      });\n    }\n  }, {\n    key: \"doUpdateSubmit\",\n    value: function doUpdateSubmit(staff, id) {\n      var _this4 = this;\n\n      console.log(staff);\n      updateStaff(staff, id).then(function (response) {\n        _this4.openNotificationWithIcon(\"success\", \"Update staff success.\");\n\n        _this4.props.history.replace(\"/staffs\");\n      }).catch(function (ex) {\n        if (ex.response && ex.response.status === 422) {\n          if (ex.response.data.errors.username) _this4.openNotificationWithIcon(\"error\", \"Username is exist.\");\n        } else {\n          _this4.openNotificationWithIcon(\"error\", \"Server error\");\n        }\n      });\n    }\n  }, {\n    key: \"renderTitleHeader\",\n    value: function renderTitleHeader() {\n      var id = this.props.match.params.id;\n      return id ? \"Update Staff\" : \"Create Staff\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          shops = _this$state.shops,\n          cities = _this$state.cities,\n          staff = _this$state.staff,\n          loader = _this$state.loader;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, this.renderTitleHeader())), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        className: \"pd-0 posi-rel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"on-loader posi-absolute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })) : null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.handleSubmit,\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, getFieldDecorator(\"username\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Username!\"\n        }],\n        initialValue: staff.username\n      })(React.createElement(Input, {\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Staff Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, getFieldDecorator(\"staffName\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Staff Name!\"\n        }],\n        initialValue: staff.staffName\n      })(React.createElement(Input, {\n        placeholder: \"Staff Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Password!\"\n        }],\n        initialValue: staff.password\n      })(React.createElement(Input.Password, {\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, getFieldDecorator(\"shop\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Store Name Avaliable.\"\n        }],\n        initialValue: this.renderInitCascader(staff.shop)\n      })(React.createElement(Cascader, {\n        options: shops,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Part-time work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, getFieldDecorator(\"partTime\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Passtime work!\"\n        }],\n        initialValue: staff.parttime\n      })(React.createElement(Radio.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(Radio, {\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"No\")))), React.createElement(Form.Item, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, getFieldDecorator(\"phoneNumber\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Phone Number!\"\n        }],\n        initialValue: staff.phoneNumber\n      })(React.createElement(Input, {\n        placeholder: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Zipcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, getFieldDecorator(\"zipcode\", {\n        initialValue: staff.zipCode\n      })(React.createElement(Input, {\n        placeholder: \"Zipcode\",\n        onBlur: this.handelBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, getFieldDecorator(\"city\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your City Avaliable.\"\n        }],\n        initialValue: this.renderInitCascader(staff.city)\n      })(React.createElement(Cascader, {\n        options: cities,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"District, district, ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, getFieldDecorator(\"district\", {\n        initialValue: staff.disitrict\n      })(React.createElement(Input, {\n        placeholder: \"District\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Under the district, ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, getFieldDecorator(\"underDistrict\", {\n        initialValue: staff.underDistrict\n      })(React.createElement(Input, {\n        placeholder: \"Under district\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Home address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, getFieldDecorator(\"homeAddress\", {\n        initialValue: staff.homeAddress\n      })(React.createElement(Input, {\n        placeholder: \"Home Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/staffs\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Back\")))))));\n    }\n  }]);\n\n  return AddStaffPage;\n}(Component);\n\nexport default Form.create()(AddStaffPage);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Staff/AddStaffPage/index.js"],"names":["React","Component","Row","Col","Card","Form","Input","Cascader","Button","Radio","notification","getListShop","listPref","getStaff","createStaff","updateStaff","updateZipcode","Link","CircularProgress","AddStaffPage","props","renderInitCascader","value","formItemLayout","labelCol","sm","span","wrapperCol","openNotificationWithIcon","type","message","handleSubmit","e","id","match","params","preventDefault","form","validateFields","err","values","obj","pref_id","city","ward","district","addr1","homeAddress","is_parttime","partTime","password","tel","phoneNumber","shop_id","shop","name","staffName","addr2","underDistrict","username","zipcode","doCreateSubmit","doUpdateSubmit","handelBlur","target","then","res","console","log","data","staff","state","disitrict","setState","catch","ex","parttime","zipCode","shops","cities","loader","response","map","label","shopName","attributes","history","replace","status","errors","getFieldDecorator","renderTitleHeader","rules","required","initialValue","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Input,\n  Cascader,\n  Button,\n  Radio,\n  notification\n} from \"antd\";\nimport {\n  getListShop,\n  listPref,\n  getStaff,\n  createStaff,\n  updateStaff,\n  updateZipcode\n} from \"../../../service/handleRequest\";\nimport {Link} from 'react-router-dom';\nimport CircularProgress from \"components/CircularProgress/index\";\nimport '../../../styles/customerStyle/index.css';\n\nclass AddStaffPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      staff: {\n        username: \"\",\n        staffName: \"\",\n        password: \"\",\n        shop: \"\",\n        city: '',\n        parttime: \"\",\n        phoneNumber: \"\",\n        zipCode: \"\",\n        disitrict: \"\",\n        underDistrict: \"\",\n        homeAddress: \"\"\n      },\n      shops: [],\n      cities: [],\n      loader: true\n    };\n  }\n\n  renderInitCascader = value => {\n    if (!value) return [];\n\n    return [value];\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    getListShop\n      .then(response => {\n        const shops = response.data.map(shop => {\n          return {\n            value: shop.id,\n            label: shop.shopName\n          };\n        });\n\n        this.setState({ shops });\n\n        if(!id){\n          this.setState({loader: false})\n        }\n      })\n      .catch(ex => {});\n\n    listPref()\n      .then(response => {\n        const cities = response.data.map(city => {\n          return {\n            value: city.id,\n            label: city.name\n          };\n        });\n\n        this.setState({ cities });\n      })\n      .catch(ex => {});\n\n    if (!id) {\n      return;\n    }\n\n    getStaff(id)\n      .then(response => {\n        const staff = {\n          username: response.data.data.attributes.username,\n          staffName: response.data.data.attributes.name,\n          shop: response.data.data.attributes.shop,\n          city: response.data.data.attributes.city,\n          parttime: response.data.data.attributes.parttime,\n          phoneNumber: response.data.data.attributes.tel,\n          zipCode: response.data.data.attributes.zipcode,\n          disitrict: response.data.data.attributes.ward,\n          underDistrict: response.data.data.attributes.addr1,\n          homeAddress: response.data.data.attributes.addr2\n        };\n\n        this.setState({ staff, loader: false });\n      })\n      .catch(ex => {\n        this.openNotificationWithIcon(\"error\", \"Server error\");\n      });\n  }\n\n  doCreateSubmit(staff) {\n    createStaff(staff)\n      .then(response => {\n        this.openNotificationWithIcon(\"success\", \"Create staff success.\");\n        this.props.history.replace(`/staffs`);\n      })\n      .catch(ex => {\n        if (ex.response && ex.response.status === 422) {\n          if (ex.response.data.errors.username)\n            this.openNotificationWithIcon(\"error\", \"Username is exist.\");\n        } else {\n          this.openNotificationWithIcon(\"error\", \"Server error\");\n        }\n      });\n  }\n\n  doUpdateSubmit(staff, id) {\n    console.log(staff);\n    updateStaff(staff, id)\n      .then(response => {\n        this.openNotificationWithIcon(\"success\", \"Update staff success.\");\n        this.props.history.replace(`/staffs`);\n      })\n      .catch(ex => {\n        if (ex.response && ex.response.status === 422) {\n          if (ex.response.data.errors.username)\n            this.openNotificationWithIcon(\"error\", \"Username is exist.\");\n        } else {\n          this.openNotificationWithIcon(\"error\", \"Server error\");\n        }\n      });\n  }\n\n  handleSubmit = e => {\n    const { id } = this.props.match.params;\n\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const obj = {\n          pref_id: values.city[0],\n          ward: values.district,\n          addr1: values.homeAddress,\n          is_parttime: values.partTime,\n          password: values.password,\n          tel: values.phoneNumber,\n          shop_id: values.shop[0],\n          name: values.staffName,\n          addr2: values.underDistrict,\n          username: values.username,\n          zipcode: values.zipcode\n        };\n\n        if (!id) this.doCreateSubmit(obj);\n        else this.doUpdateSubmit(obj, id);\n      }\n    });\n  };\n\n  renderTitleHeader() {\n    const { id } = this.props.match.params;\n    return id ? \"Update Staff\" : \"Create Staff\";\n  }\n\n  handelBlur = e => {\n    const { value } = e.target;\n    updateZipcode(value).then(res => {\n      console.log(res.data);\n      const {staff} = this.state;\n\n      staff.city = res.data.pref_id;\n      staff.disitrict = res.data.ward;\n      staff.underDistrict = res.data.addr1;\n      staff.homeAddress = res.data.addr2;\n\n      this.setState({staff});\n    }).catch(ex => {\n\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { shops, cities, staff, loader } = this.state;\n\n    return (\n      <div>\n      <div className=\"title-header\">\n        <h3 className=\"text-title\">{this.renderTitleHeader()}</h3>\n        </div>\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={24} className=\"pd-0 posi-rel\">\n          {loader ? (\n            <div className=\"on-loader posi-absolute\" >\n              <CircularProgress />\n            </div>\n          ) : null}\n            <Card>\n              <Form {...this.formItemLayout} onSubmit={this.handleSubmit} className=\"form-shape\">\n                <Form.Item label=\"Username\">\n                  {getFieldDecorator(\"username\", {\n                    rules: [\n                      { required: true, message: \"Please input your Username!\" }\n                    ],\n                    initialValue: staff.username\n                  })(<Input placeholder=\"Username\" />)}\n                </Form.Item>\n                <Form.Item label=\"Staff Name\">\n                  {getFieldDecorator(\"staffName\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Staff Name!\"\n                      }\n                    ],\n                    initialValue: staff.staffName\n                  })(<Input placeholder=\"Staff Name\" />)}\n                </Form.Item>\n                <Form.Item label=\"Password\">\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      { required: true, message: \"Please input your Password!\" }\n                    ],\n                    initialValue: staff.password\n                  })(<Input.Password placeholder=\"Password\" />)}\n                </Form.Item>\n                <Form.Item label=\"Store\">\n                  {getFieldDecorator(\"shop\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        required: true,\n                        message: \"Please select your Store Name Avaliable.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCascader(staff.shop)\n                  })(<Cascader options={shops} />)}\n                </Form.Item>\n                <Form.Item label=\"Part-time work\">\n                  {getFieldDecorator(\"partTime\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Passtime work!\"\n                      }\n                    ],\n                    initialValue: staff.parttime\n                  })(\n                    <Radio.Group>\n                      <Radio value={1}>Yes</Radio>\n                      <Radio value={0}>No</Radio>\n                    </Radio.Group>\n                  )}\n                </Form.Item>\n                <Form.Item label=\"Phone Number\">\n                  {getFieldDecorator(\"phoneNumber\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Phone Number!\"\n                      }\n                    ],\n                    initialValue: staff.phoneNumber\n                  })(<Input placeholder=\"Phone Number\" />)}\n                </Form.Item>\n                <Form.Item label=\"Zipcode\">\n                  {getFieldDecorator(\"zipcode\", {\n                    initialValue: staff.zipCode\n                  })(<Input placeholder=\"Zipcode\" onBlur={this.handelBlur}/>)}\n                </Form.Item>\n                <Form.Item label=\"City\">\n                  {getFieldDecorator(\"city\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        required: true,\n                        message: \"Please select your City Avaliable.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCascader(staff.city)\n                  })(<Cascader options={cities} />)}\n                </Form.Item>\n                <Form.Item label=\"District, district, ...\">\n                  {getFieldDecorator(\"district\", {\n                    initialValue: staff.disitrict\n                  })(<Input placeholder=\"District\" />)}\n                </Form.Item>\n                <Form.Item label=\"Under the district, ...\">\n                  {getFieldDecorator(\"underDistrict\", {\n                    initialValue: staff.underDistrict\n                  })(<Input placeholder=\"Under district\" />)}\n                </Form.Item>\n                <Form.Item label=\"Home address\">\n                  {getFieldDecorator(\"homeAddress\", {\n                    initialValue: staff.homeAddress\n                  })(<Input placeholder=\"Home Address\" />)}\n                </Form.Item>\n                  <div className=\"dp-flex-jf-center dp-flex\">\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Save\n                  </Button>\n                  <Link to=\"/staffs\" className=\"ant-btn\">Back</Link>\n                </div>\n              </Form>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(AddStaffPage);\n"]},"metadata":{},"sourceType":"module"}