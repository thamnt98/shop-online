{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Product/CopyProductPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Form, Input, Cascader, Button, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\nimport { getListShop, getSize, listColor, getListProducer, getSuppliers, createProduct, getProduct } from \"../../../service/handleRequest\";\n\nvar CopyProductPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CopyProductPage, _Component);\n\n  function CopyProductPage(props) {\n    var _this;\n\n    _classCallCheck(this, CopyProductPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CopyProductPage).call(this, props));\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n\n    _this.renderInitCassader = function (value) {\n      if (!value) return [];\n      return [value];\n    };\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      var productId = _this.state.productId;\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var obj = {\n            shop_id: values.shop_id[0],\n            product_name: values.product_name,\n            product_code: values.product_code,\n            member_price: values.member_price,\n            stock_price: values.stock_price,\n            notax_price: values.notax_price,\n            tax_price: values.tax_price,\n            size_text: values.size_text,\n            color_text: values.color_text,\n            size_id: values.size_id[0],\n            color_id: values.color_id[0],\n            maker_id: values.maker_id[0],\n            supplier_id: values.supplier_id[0],\n            notes: values.notes\n          };\n          createProduct(obj).then(function (res) {\n            _this.openNotificationWithIcon(\"success\", \"Create product success\");\n\n            localStorage.removeItem(\"copyUser\");\n\n            _this.props.history.push(\"/products\");\n          }).catch(function (ex) {\n            _this.openNotificationWithIcon(\"error\", \"Create product fail\");\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      loader: true,\n      productId: 0,\n      data: {\n        product_code: \"\",\n        product_name: \"\",\n        shop_id: \"\",\n        stock_price: \"\",\n        notax_price: \"\",\n        tax_price: \"\",\n        member_price: \"\",\n        size_id: \"\",\n        size_text: \"\",\n        color_text: \"\",\n        maker_id: \"\",\n        supplier_id: \"\",\n        notes: \"\"\n      },\n      shops: [],\n      sizes: [],\n      colors: [],\n      suppliers: [],\n      producers: [],\n      fixNumber: {\n        size: 150,\n        color: 100,\n        produce: 1\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CopyProductPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.props.match.params.id;\n      this.setState({\n        productId: id\n      });\n      var fixNumber = this.state.fixNumber;\n      getListShop.then(function (response) {\n        var shops = response.data.map(function (shop) {\n          return {\n            value: shop.id,\n            label: shop.shopName\n          };\n        });\n\n        _this2.setState({\n          shops: shops\n        });\n      }).catch(function (ex) {});\n      getSize(1, fixNumber.size).then(function (res) {\n        var sizes = res.data.data.map(function (size) {\n          return {\n            label: size.size_name,\n            value: size.id\n          };\n        });\n\n        _this2.setState({\n          sizes: sizes\n        });\n      });\n      listColor(1, fixNumber.color).then(function (res) {\n        var colors = res.data.data.map(function (color) {\n          return {\n            label: color.color_name,\n            value: color.id\n          };\n        });\n\n        _this2.setState({\n          colors: colors\n        });\n      });\n      getListProducer(fixNumber.produce).then(function (res) {\n        var producers = res.data.data.map(function (producer) {\n          return {\n            label: producer.makerName,\n            value: producer.id\n          };\n        });\n\n        _this2.setState({\n          producers: producers\n        });\n      });\n      getSuppliers().then(function (res) {\n        var suppliers = res.data.map(function (supplier) {\n          return {\n            value: supplier.data.id,\n            label: supplier.data.attributes.supplierName || \"\"\n          };\n        });\n\n        _this2.setState({\n          suppliers: suppliers,\n          loader: false\n        });\n      });\n      var isCopy = this.props.match.path.split(\"/\")[2];\n      console.log(isCopy);\n\n      if (isCopy === \"copy\") {\n        getProduct(id).then(function (res) {\n          var data = {\n            product_code: res.data.attributes.product_code,\n            product_name: res.data.attributes.product_name,\n            shop_id: res.data.attributes.shop_id,\n            stock_price: res.data.attributes.stock_price,\n            notax_price: res.data.attributes.notax_price,\n            tax_price: res.data.attributes.tax_price,\n            member_price: res.data.attributes.member_price,\n            size_id: res.data.attributes.size_id,\n            size_text: res.data.attributes.size_text,\n            color_text: res.data.attributes.color_text,\n            maker_id: res.data.attributes.maker_id,\n            supplier_id: res.data.attributes.supplier_id,\n            notes: res.data.attributes.notes\n          };\n\n          _this2.setState({\n            data: data\n          });\n        });\n      } else {\n        var coypUser = localStorage.getItem(\"copyUser\");\n        this.setState({\n          data: JSON.parse(coypUser)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sizes = _this$state.sizes,\n          colors = _this$state.colors,\n          suppliers = _this$state.suppliers,\n          shops = _this$state.shops,\n          producers = _this$state.producers,\n          loader = _this$state.loader,\n          data = _this$state.data;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"AddProduct\")), React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        className: \"pd-0 posi-rel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"posi-absolute on-loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })) : null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.handleSubmit,\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Product Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, getFieldDecorator(\"product_code\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Product Code!\"\n        }],\n        initialValue: data.product_code\n      })(React.createElement(Input, {\n        placeholder: \"Product Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Product Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, getFieldDecorator(\"product_name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Product Name!\"\n        }],\n        initialValue: data.product_name\n      })(React.createElement(Input, {\n        placeholder: \"Product Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, getFieldDecorator(\"shop_id\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Store Name Avaliable.\"\n        }],\n        initialValue: this.renderInitCassader(data.shop_id)\n      })(React.createElement(Cascader, {\n        options: shops,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Purchase price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, getFieldDecorator(\"stock_price\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Purchase price!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Purchase price must be number.\"\n        }],\n        initialValue: data.stock_price\n      })(React.createElement(Input, {\n        placeholder: \"Purchase price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Price don't include tax\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, getFieldDecorator(\"notax_price\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Price!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Price no tax must be number.\"\n        }],\n        initialValue: data.notax_price\n      })(React.createElement(Input, {\n        placeholder: \"Price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Tax included price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, getFieldDecorator(\"tax_price\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Tax!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Tax must be number.\"\n        }],\n        initialValue: data.tax_price\n      })(React.createElement(Input, {\n        placeholder: \"Tax price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Member price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, getFieldDecorator(\"member_price\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Member price!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Member price must be number.\"\n        }],\n        initialValue: data.member_price\n      })(React.createElement(Input, {\n        placeholder: \"Member price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, getFieldDecorator(\"size_id\", {\n        rules: [{\n          type: \"array\",\n          message: \"Please select your Size.\"\n        }],\n        initialValue: this.renderInitCassader(data.size_id)\n      })(React.createElement(Cascader, {\n        options: sizes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"New size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, getFieldDecorator(\"size_text\", {\n        initialValue: data.size_text\n      })(React.createElement(Input, {\n        placeholder: \"New Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, getFieldDecorator(\"color_id\", {\n        rules: [{\n          type: \"array\",\n          message: \"Please select your Color.\"\n        }],\n        initialValue: this.renderInitCassader(data.color_id)\n      })(React.createElement(Cascader, {\n        options: colors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"New color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, getFieldDecorator(\"color_text\", {\n        initialValue: data.color_text\n      })(React.createElement(Input, {\n        placeholder: \"New Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Manufacturer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, getFieldDecorator(\"maker_id\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Manufacturer.\"\n        }],\n        initialValue: this.renderInitCassader(data.maker_id)\n      })(React.createElement(Cascader, {\n        options: producers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Suppliers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, getFieldDecorator(\"supplier_id\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Supplier.\"\n        }],\n        initialValue: this.renderInitCassader(data.supplier_id)\n      })(React.createElement(Cascader, {\n        options: suppliers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, getFieldDecorator(\"notes\", {\n        initialValue: data.notes\n      })(React.createElement(Input, {\n        placeholder: \"Note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/products\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Back\")))))));\n    }\n  }]);\n\n  return CopyProductPage;\n}(Component);\n\nexport default Form.create()(CopyProductPage);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Product/CopyProductPage/index.js"],"names":["React","Component","Row","Col","Card","Form","Input","Cascader","Button","notification","Link","CircularProgress","getListShop","getSize","listColor","getListProducer","getSuppliers","createProduct","getProduct","CopyProductPage","props","formItemLayout","labelCol","sm","span","wrapperCol","renderInitCassader","value","openNotificationWithIcon","type","message","handleSubmit","e","productId","state","preventDefault","form","validateFields","err","values","obj","shop_id","product_name","product_code","member_price","stock_price","notax_price","tax_price","size_text","color_text","size_id","color_id","maker_id","supplier_id","notes","then","res","localStorage","removeItem","history","push","catch","ex","loader","data","shops","sizes","colors","suppliers","producers","fixNumber","size","color","produce","id","match","params","setState","response","map","shop","label","shopName","size_name","color_name","producer","makerName","supplier","attributes","supplierName","isCopy","path","split","console","log","coypUser","getItem","JSON","parse","getFieldDecorator","rules","required","initialValue","pattern","RegExp","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Input,\n  Cascader,\n  Button,\n  notification\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"../../../styles/customerStyle/index.css\";\nimport {\n  getListShop,\n  getSize,\n  listColor,\n  getListProducer,\n  getSuppliers,\n  createProduct,\n  getProduct\n} from \"../../../service/handleRequest\";\n\nclass CopyProductPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      productId: 0,\n      data: {\n        product_code: \"\",\n        product_name: \"\",\n        shop_id: \"\",\n        stock_price: \"\",\n        notax_price: \"\",\n        tax_price: \"\",\n        member_price: \"\",\n        size_id: \"\",\n        size_text: \"\",\n        color_text: \"\",\n        maker_id: \"\",\n        supplier_id: \"\",\n        notes: \"\"\n      },\n      shops: [],\n      sizes: [],\n      colors: [],\n      suppliers: [],\n      producers: [],\n      fixNumber: {\n        size: 150,\n        color: 100,\n        produce: 1\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.setState({ productId: id });\n    const {fixNumber}= this.state;\n\n    getListShop\n      .then(response => {\n        const shops = response.data.map(shop => {\n          return {\n            value: shop.id,\n            label: shop.shopName\n          };\n        });\n\n        this.setState({ shops });\n      })\n      .catch(ex => {});\n\n    getSize(1, fixNumber.size).then(res => {\n      const sizes = res.data.data.map(size => {\n        return {\n          label: size.size_name,\n          value: size.id\n        };\n      });\n\n      this.setState({ sizes });\n    });\n\n    listColor(1, fixNumber.color).then(res => {\n      const colors = res.data.data.map(color => {\n        return {\n          label: color.color_name,\n          value: color.id\n        };\n      });\n\n      this.setState({ colors });\n    });\n\n    getListProducer(fixNumber.produce).then(res => {\n      const producers = res.data.data.map(producer => {\n        return {\n          label: producer.makerName,\n          value: producer.id\n        };\n      });\n\n      this.setState({ producers });\n    });\n\n    getSuppliers().then(res => {\n      const suppliers = res.data.map(supplier => {\n        return {\n          value: supplier.data.id,\n          label: supplier.data.attributes.supplierName || \"\"\n        };\n      });\n\n      this.setState({ suppliers, loader: false });\n    });\n\n    const isCopy = this.props.match.path.split(\"/\")[2];\n    console.log(isCopy);\n\n    if (isCopy === \"copy\") {\n      getProduct(id).then(res => {\n        const data = {\n          product_code: res.data.attributes.product_code,\n          product_name: res.data.attributes.product_name,\n          shop_id: res.data.attributes.shop_id,\n          stock_price: res.data.attributes.stock_price,\n          notax_price: res.data.attributes.notax_price,\n          tax_price: res.data.attributes.tax_price,\n          member_price: res.data.attributes.member_price,\n          size_id: res.data.attributes.size_id,\n          size_text: res.data.attributes.size_text,\n          color_text: res.data.attributes.color_text,\n          maker_id: res.data.attributes.maker_id,\n          supplier_id: res.data.attributes.supplier_id,\n          notes: res.data.attributes.notes\n        };\n\n        this.setState({ data });\n      });\n    } else {\n      const coypUser = localStorage.getItem(\"copyUser\");\n      this.setState({ data: JSON.parse(coypUser) });\n    }\n  }\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  renderInitCassader = value => {\n    if (!value) return [];\n\n    return [value];\n  };\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  handleSubmit = e => {\n    const { productId } = this.state;\n\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const obj = {\n          shop_id: values.shop_id[0],\n          product_name: values.product_name,\n          product_code: values.product_code,\n          member_price: values.member_price,\n          stock_price: values.stock_price,\n          notax_price: values.notax_price,\n          tax_price: values.tax_price,\n          size_text: values.size_text,\n          color_text: values.color_text,\n          size_id: values.size_id[0],\n          color_id: values.color_id[0],\n          maker_id: values.maker_id[0],\n          supplier_id: values.supplier_id[0],\n          notes: values.notes\n        };\n\n        createProduct(obj)\n          .then(res => {\n            this.openNotificationWithIcon(\"success\", \"Create product success\");\n            localStorage.removeItem(\"copyUser\");\n            this.props.history.push(\"/products\");\n          })\n          .catch(ex => {\n            this.openNotificationWithIcon(\"error\", \"Create product fail\");\n          });\n      }\n    });\n  };\n\n  render() {\n    const {\n      sizes,\n      colors,\n      suppliers,\n      shops,\n      producers,\n      loader,\n      data\n    } = this.state;\n    const { getFieldDecorator } = this.props.form;\n    \n    return (\n      <div>\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">AddProduct</h3>\n        </div>\n\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={24} className=\"pd-0 posi-rel\">\n            {loader ? (\n              <div className=\"posi-absolute on-loader\">\n                <CircularProgress />\n              </div>\n            ) : null}\n            <Card>\n              <Form\n                {...this.formItemLayout}\n                onSubmit={this.handleSubmit}\n                className=\"form-shape\"\n              >\n                <Form.Item label=\"Product Code\">\n                  {getFieldDecorator(\"product_code\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Product Code!\"\n                      }\n                    ],\n                    initialValue: data.product_code\n                  })(<Input placeholder=\"Product Code\" />)}\n                </Form.Item>\n                <Form.Item label=\"Product Name\">\n                  {getFieldDecorator(\"product_name\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Product Name!\"\n                      }\n                    ],\n                    initialValue: data.product_name\n                  })(<Input placeholder=\"Product Name\" />)}\n                </Form.Item>\n                <Form.Item label=\"Store Name\">\n                  {getFieldDecorator(\"shop_id\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        required: true,\n                        message: \"Please select your Store Name Avaliable.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCassader(data.shop_id)\n                  })(<Cascader options={shops} />)}\n                </Form.Item>\n                <Form.Item label=\"Purchase price\">\n                  {getFieldDecorator(\"stock_price\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Purchase price!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^[0-9]*$\"),\n                        message: \"Purchase price must be number.\"\n                      }\n                    ],\n                    initialValue: data.stock_price\n                  })(<Input placeholder=\"Purchase price\" />)}\n                </Form.Item>\n                <Form.Item label=\"Price don't include tax\">\n                  {getFieldDecorator(\"notax_price\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Price!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^[0-9]*$\"),\n                        message: \"Price no tax must be number.\"\n                      }\n                    ],\n                    initialValue: data.notax_price\n                  })(<Input placeholder=\"Price\" />)}\n                </Form.Item>\n                <Form.Item label=\"Tax included price\">\n                  {getFieldDecorator(\"tax_price\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Tax!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^[0-9]*$\"),\n                        message: \"Tax must be number.\"\n                      }\n                    ],\n                    initialValue: data.tax_price\n                  })(<Input placeholder=\"Tax price\" />)}\n                </Form.Item>\n                <Form.Item label=\"Member price\">\n                  {getFieldDecorator(\"member_price\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Member price!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^[0-9]*$\"),\n                        message: \"Member price must be number.\"\n                      }\n                    ],\n                    initialValue: data.member_price\n                  })(<Input placeholder=\"Member price\" />)}\n                </Form.Item>\n                <Form.Item label=\"Size\">\n                  {getFieldDecorator(\"size_id\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        message: \"Please select your Size.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCassader(data.size_id)\n                  })(<Cascader options={sizes} />)}\n                </Form.Item>\n                <Form.Item label=\"New size\">\n                  {getFieldDecorator(\"size_text\", {\n                    initialValue: data.size_text\n                  })(<Input placeholder=\"New Size\" />)}\n                </Form.Item>\n                <Form.Item label=\"Color\">\n                  {getFieldDecorator(\"color_id\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        message: \"Please select your Color.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCassader(data.color_id)\n                  })(<Cascader options={colors} />)}\n                </Form.Item>\n                <Form.Item label=\"New color\">\n                  {getFieldDecorator(\"color_text\", {\n                    initialValue: data.color_text\n                  })(<Input placeholder=\"New Color\" />)}\n                </Form.Item>\n                <Form.Item label=\"Manufacturer\">\n                  {getFieldDecorator(\"maker_id\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        required: true,\n                        message: \"Please select your Manufacturer.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCassader(data.maker_id)\n                  })(<Cascader options={producers} />)}\n                </Form.Item>\n                <Form.Item label=\"Suppliers\">\n                  {getFieldDecorator(\"supplier_id\", {\n                    rules: [\n                      {\n                        type: \"array\",\n                        required: true,\n                        message: \"Please select your Supplier.\"\n                      }\n                    ],\n                    initialValue: this.renderInitCassader(data.supplier_id)\n                  })(<Cascader options={suppliers} />)}\n                </Form.Item>\n                <Form.Item label=\"Note\">\n                  {getFieldDecorator(\"notes\", {\n                    initialValue: data.notes\n                  })(<Input placeholder=\"Note\" />)}\n                </Form.Item>\n                <div className=\"dp-flex-jf-center dp-flex\">\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Save\n                  </Button>\n                  <Link to=\"/products\" className=\"ant-btn\">\n                    Back\n                  </Link>\n                </div>\n              </Form>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(CopyProductPage);\n"]},"metadata":{},"sourceType":"module"}