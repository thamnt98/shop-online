{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Producer/ProducerAddPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { listPref, getListShop, getZipCode, getPrefById, addProducer, getMaxCode } from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          addProducer(values).then(function (res) {\n            _this.openNotificationWithIcon(\"success\", \"Add  producer success\");\n\n            _this.props.history.replace(\"/producers\");\n          }).catch(function (e) {\n            _this.openNotificationWithIcon(\"error\", \"Add producer error!\");\n          });\n        }\n      });\n    };\n\n    _this.handleBlur = function (e) {\n      getZipCode(e.target.value).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          zipcode: data\n        });\n\n        var zipcode = _this.state.zipcode;\n        getPrefById(zipcode[\"pref_id\"]).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this.setState({\n            city: data[\"id\"]\n          }, function () {\n            _this.props.form.setFieldsValue({\n              ward: zipcode[\"ward\"],\n              addr1: zipcode[\"addr1\"],\n              pref_id: _this.state.city\n            });\n          });\n        });\n      });\n    };\n\n    _this.styleLoader = {\n      position: \"sticky\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      zIndex: 1,\n      background: \"#fff\"\n    };\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      prefs: [],\n      shops: [],\n      zipcode: [],\n      city: \"\",\n      nextCode: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      listPref().then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          prefs: data\n        });\n      });\n      getListShop.then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this2.setState({\n          shops: data\n        });\n\n        var shops = _this2.state.shops;\n      });\n      getMaxCode().then(function (_ref5) {\n        var data = _ref5.data;\n\n        _this2.setState({\n          nextCode: 1 + Number(data.maxCode)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          prefs = _this$state.prefs,\n          shops = _this$state.shops,\n          nextCode = _this$state.nextCode;\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Create Manufacturers\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        className: \"form-shape\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Producer code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, getFieldDecorator(\"maker_code\", {\n        initialValue: nextCode,\n        rules: [{\n          required: true,\n          message: \"Please input your  producer code!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Producer code  must be number !\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Manufacturer name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, getFieldDecorator(\"maker_name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Manufacturer name!\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Store name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, getFieldDecorator(\"shop_id\", {\n        rules: [{\n          required: true,\n          message: \"Please input your store name!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Shop name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, shops.map(function (shop, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: shop.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, shop.shopName);\n      })))), React.createElement(Form.Item, {\n        label: \"Phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, getFieldDecorator(\"tel\", {\n        rules: [{\n          required: true,\n          message: \"Please input your phone number!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Phone number must be number !\"\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Post code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, getFieldDecorator(\"zipcode\", {\n        rules: [{\n          required: true,\n          message: \"Please input your post code!\"\n        }, {\n          pattern: new RegExp(\"^[0-9]*$\"),\n          message: \"Post code must be number !\"\n        }]\n      })(React.createElement(Input, {\n        onBlur: this.handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, getFieldDecorator(\"pref_id\", {\n        rules: [{\n          required: true,\n          message: \"Please input your City!\"\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, prefs.map(function (pref, i) {\n        return React.createElement(\"option\", {\n          key: i,\n          value: pref.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, pref.name);\n      })))), React.createElement(Form.Item, {\n        label: \"District\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, getFieldDecorator(\"ward\", {})(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Town\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, getFieldDecorator(\"addr1\", {})(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Detailed address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, getFieldDecorator(\"addr2\", {})(React.createElement(Input, {\n        placeholder: \"Some description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/producers\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Back\")))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Form.create()(Index);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Producer/ProducerAddPage/index.js"],"names":["React","Component","Form","Select","Input","Button","Card","notification","Link","listPref","getListShop","getZipCode","getPrefById","addProducer","getMaxCode","Index","props","openNotificationWithIcon","type","message","onSubmit","e","preventDefault","form","validateFields","err","values","then","res","history","replace","catch","handleBlur","target","value","data","setState","zipcode","state","city","setFieldsValue","ward","addr1","pref_id","styleLoader","position","top","left","width","zIndex","background","formItemLayout","labelCol","sm","span","wrapperCol","prefs","shops","nextCode","Number","maxCode","getFieldDecorator","initialValue","rules","required","pattern","RegExp","map","shop","i","id","shopName","pref","name","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,YAA5C,QAAgE,MAAhE;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,UANF,QAOO,gCAPP;AAQA,OAAO,yCAAP;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAWnBC,wBAXmB,GAWQ,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC5CZ,MAAAA,YAAY,CAACW,IAAD,CAAZ,CAAmB;AACjBC,QAAAA,OAAO,EAAEA;AADQ,OAAnB;AAGD,KAfkB;;AAAA,UA8BnBC,QA9BmB,GA8BR,UAAAC,CAAC,EAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKN,KAAL,CAAWO,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACRZ,UAAAA,WAAW,CAACa,MAAD,CAAX,CACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,kBAAKX,wBAAL,CAA8B,SAA9B,EAAyC,uBAAzC;;AACA,kBAAKD,KAAL,CAAWa,OAAX,CAAmBC,OAAnB;AACD,WAJH,EAKGC,KALH,CAKS,UAAAV,CAAC,EAAI;AACV,kBAAKJ,wBAAL,CAA8B,OAA9B,EAAuC,qBAAvC;AACD,WAPH;AAQD;AACF,OAXD;AAYD,KA5CkB;;AAAA,UA8CnBe,UA9CmB,GA8CN,UAAAX,CAAC,EAAI;AAChBV,MAAAA,UAAU,CAACU,CAAC,CAACY,MAAF,CAASC,KAAV,CAAV,CAA2BP,IAA3B,CAAgC,gBAAc;AAAA,YAAXQ,IAAW,QAAXA,IAAW;;AAC5C,cAAKC,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEF;AAAX,SAAd;;AAD4C,YAEpCE,OAFoC,GAExB,MAAKC,KAFmB,CAEpCD,OAFoC;AAG5CzB,QAAAA,WAAW,CAACyB,OAAO,CAAC,SAAD,CAAR,CAAX,CAAgCV,IAAhC,CAAqC,iBAAc;AAAA,cAAXQ,IAAW,SAAXA,IAAW;;AACjD,gBAAKC,QAAL,CAAc;AAAEG,YAAAA,IAAI,EAAEJ,IAAI,CAAC,IAAD;AAAZ,WAAd,EAAoC,YAAM;AACxC,kBAAKnB,KAAL,CAAWO,IAAX,CAAgBiB,cAAhB,CAA+B;AAC7BC,cAAAA,IAAI,EAAEJ,OAAO,CAAC,MAAD,CADgB;AAE7BK,cAAAA,KAAK,EAAEL,OAAO,CAAC,OAAD,CAFe;AAG7BM,cAAAA,OAAO,EAAE,MAAKL,KAAL,CAAWC;AAHS,aAA/B;AAKD,WAND;AAOD,SARD;AASD,OAZD;AAaD,KA5DkB;;AAAA,UA8DnBK,WA9DmB,GA8DL;AACZC,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,GAAG,EAAE,CAFO;AAGZC,MAAAA,IAAI,EAAE,CAHM;AAIZC,MAAAA,KAAK,EAAE,MAJK;AAKZC,MAAAA,MAAM,EAAE,CALI;AAMZC,MAAAA,UAAU,EAAE;AANA,KA9DK;AAAA,UAuEnBC,cAvEmB,GAuEF;AACfC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADI,OADK;AAIfC,MAAAA,UAAU,EAAE;AACVF,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADM;AAJG,KAvEE;AAEjB,UAAKhB,KAAL,GAAa;AACXkB,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXpB,MAAAA,OAAO,EAAE,EAHE;AAIXE,MAAAA,IAAI,EAAE,EAJK;AAKXmB,MAAAA,QAAQ,EAAE;AALC,KAAb;AAFiB;AASlB;;;;wCAQmB;AAAA;;AAClBjD,MAAAA,QAAQ,GAAGkB,IAAX,CAAgB,iBAAc;AAAA,YAAXQ,IAAW,SAAXA,IAAW;;AAC5B,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEoB,UAAAA,KAAK,EAAErB;AAAT,SAAd;AACD,OAFD;AAGAzB,MAAAA,WAAW,CAACiB,IAAZ,CAAiB,iBAAc;AAAA,YAAXQ,IAAW,SAAXA,IAAW;;AAC7B,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEqB,UAAAA,KAAK,EAAEtB;AAAT,SAAd;;AAD6B,YAErBsB,KAFqB,GAEX,MAAI,CAACnB,KAFM,CAErBmB,KAFqB;AAG9B,OAHD;AAIA3C,MAAAA,UAAU,GAAGa,IAAb,CAAkB,iBAAc;AAAA,YAAXQ,IAAW,SAAXA,IAAW;;AAC9B,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEsB,UAAAA,QAAQ,EAAE,IAAIC,MAAM,CAACxB,IAAI,CAACyB,OAAN;AAAtB,SAAd;AACD,OAFD;AAGD;;;6BAoDQ;AAAA,UACCC,iBADD,GACuB,KAAK7C,KAAL,CAAWO,IADlC,CACCsC,iBADD;AAAA,wBAE4B,KAAKvB,KAFjC;AAAA,UAECkB,KAFD,eAECA,KAFD;AAAA,UAEQC,KAFR,eAEQA,KAFR;AAAA,UAEeC,QAFf,eAEeA,QAFf;AAGP,aACE;AAAK,QAAA,KAAK,EAAE;AAAEb,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADA,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,oBACM,KAAKM,cADX;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,QAAQ,EAAE,KAAK/B,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyC,iBAAiB,CAAC,YAAD,EAAe;AAC/BC,QAAAA,YAAY,EAAEJ,QADiB;AAE/BK,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEE7C,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACE8C,UAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,UAAX,CADX;AAEE/C,UAAAA,OAAO,EAAE;AAFX,SALK;AAFwB,OAAf,CAAjB,CAYE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADH,CALF,EAoBE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0C,iBAAiB,CAAC,YAAD,EAAe;AAC/BE,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEE7C,UAAAA,OAAO,EAAE;AAFX,SADK;AADwB,OAAf,CAAjB,CAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADH,CApBF,EA8BE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0C,iBAAiB,CAAC,SAAD,EAAY;AAC5BE,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkB7C,UAAAA,OAAO,EAAE;AAA3B,SADK;AADqB,OAAZ,CAAjB,CAKC,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGsC,KAAK,CAACU,GAAN,CAAU,UAASC,IAAT,EAAeC,CAAf,EAAkB;AAC3B,eACE;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAED,IAAI,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,IAAI,CAACG,QADR,CADF;AAKD,OANA,CADH,CALD,CADH,CA9BF,EA+CE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,iBAAiB,CAAC,KAAD,EAAQ;AACxBE,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEE7C,UAAAA,OAAO,EAAE;AAFX,SADK,EAKL;AACE8C,UAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,UAAX,CADX;AAEE/C,UAAAA,OAAO,EAAE;AAFX,SALK;AADiB,OAAR,CAAjB,CAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADH,CA/CF,EA6DE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0C,iBAAiB,CAAC,SAAD,EAAY;AAC5BE,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkB7C,UAAAA,OAAO,EAAE;AAA3B,SADK,EAEL;AACE8C,UAAAA,OAAO,EAAE,IAAIC,MAAJ,CAAW,UAAX,CADX;AAEE/C,UAAAA,OAAO,EAAE;AAFX,SAFK;AADqB,OAAZ,CAAjB,CAQE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADH,CA7DF,EAwEE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG6B,iBAAiB,CAAC,SAAD,EAAY;AAC5BE,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkB7C,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADqB,OAAZ,CAAjB,CAGC,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqC,KAAK,CAACW,GAAN,CAAU,UAASK,IAAT,EAAeH,CAAf,EAAkB;AAC3B,eACE;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAEG,IAAI,CAACF,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGE,IAAI,CAACC,IADR,CADF;AAKD,OANA,CADH,CAHD,CADH,CAxEF,EAuFE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,iBAAiB,CAAC,MAAD,EAAS,EAAT,CAAjB,CACC,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CAvFF,EA4FE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,iBAAiB,CAAC,OAAD,EAAU,EAAV,CAAjB,CACC,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CA5FF,EAiGE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,iBAAiB,CAAC,OAAD,EAAU,EAAV,CAAjB,CACC,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CAjGF,EAsGQ;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,EAIJ,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJI,CAtGR,CADF,CAJF,CADF;AAwHD;;;;EA5MiB5D,S;;AA8MpB,eAAeC,IAAI,CAACwE,MAAL,GAAc3D,KAAd,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Select, Input, Button, Card, notification } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  listPref,\n  getListShop,\n  getZipCode,\n  getPrefById,\n  addProducer,\n  getMaxCode\n} from \"../../../service/handleRequest\";\nimport '../../../styles/customerStyle/index.css';\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prefs: [],\n      shops: [],\n      zipcode: [],\n      city: \"\",\n      nextCode: \"\"\n    };\n  }\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  componentDidMount() {\n    listPref().then(({ data }) => {\n      this.setState({ prefs: data });\n    });\n    getListShop.then(({ data }) => {\n      this.setState({ shops: data });\n      const { shops } = this.state;\n    });\n    getMaxCode().then(({ data }) => {\n      this.setState({ nextCode: 1 + Number(data.maxCode) });\n    });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        addProducer(values)\n          .then(res => {\n            this.openNotificationWithIcon(\"success\", \"Add  producer success\");\n            this.props.history.replace(`/producers`);\n          })\n          .catch(e => {\n            this.openNotificationWithIcon(\"error\", \"Add producer error!\");\n          });\n      }\n    });\n  };\n\n  handleBlur = e => {\n    getZipCode(e.target.value).then(({ data }) => {\n      this.setState({ zipcode: data });\n      const { zipcode } = this.state;\n      getPrefById(zipcode[\"pref_id\"]).then(({ data }) => {\n        this.setState({ city: data[\"id\"] }, () => {\n          this.props.form.setFieldsValue({\n            ward: zipcode[\"ward\"],\n            addr1: zipcode[\"addr1\"],\n            pref_id: this.state.city\n          });\n        });\n      });\n    });\n  };\n\n  styleLoader = {\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    zIndex: 1,\n    background: \"#fff\"\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { prefs, shops, nextCode } = this.state;\n    return (\n      <div style={{ position: \"relative\" }}>\n      <div className=\"title-header\">\n        <h3 className=\"text-title\">Create Manufacturers</h3>\n        </div>\n        <Card>\n          <Form\n            {...this.formItemLayout}\n            className=\"form-shape\"\n            onSubmit={this.onSubmit}\n          >\n            <Form.Item label=\"Producer code\">\n              {getFieldDecorator(\"maker_code\", {\n                initialValue: nextCode,\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your  producer code!\"\n                  },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Producer code  must be number !\"\n                  }\n                ]\n              })(<Input/>)}\n            </Form.Item>\n            <Form.Item label=\"Manufacturer name\">\n              {getFieldDecorator(\"maker_name\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your Manufacturer name!\"\n                  }\n                ]\n              })(<Input/>)}\n            </Form.Item>\n            <Form.Item label=\"Store name\">\n              {getFieldDecorator(\"shop_id\", {\n                rules: [\n                  { required: true, message: \"Please input your store name!\" }\n                ]\n              })(\n                <Select placeholder=\"Shop name\">\n                  {shops.map(function(shop, i) {\n                    return (\n                      <option key={i} value={shop.id}>\n                        {shop.shopName}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"Phone number\">\n              {getFieldDecorator(\"tel\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your phone number!\"\n                  },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Phone number must be number !\"\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"Post code\">\n              {getFieldDecorator(\"zipcode\", {\n                rules: [\n                  { required: true, message: \"Please input your post code!\" },\n                  {\n                    pattern: new RegExp(\"^[0-9]*$\"),\n                    message: \"Post code must be number !\"\n                  }\n                ]\n              })(<Input onBlur={this.handleBlur} />)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n              {getFieldDecorator(\"pref_id\", {\n                rules: [{ required: true, message: \"Please input your City!\" }]\n              })(\n                <Select placeholder=\"City\">\n                  {prefs.map(function(pref, i) {\n                    return (\n                      <option key={i} value={pref.id}>\n                        {pref.name}\n                      </option>\n                    );\n                  })}\n                </Select>\n              )}\n            </Form.Item>\n            <Form.Item label=\"District\">\n              {getFieldDecorator(\"ward\", {})(\n                <Input placeholder=\"Some description\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Town\">\n              {getFieldDecorator(\"addr1\", {})(\n                <Input placeholder=\"Some description\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Detailed address\">\n              {getFieldDecorator(\"addr2\", {})(\n                <Input placeholder=\"Some description\" />\n              )}\n            </Form.Item>\n                  <div className=\"dp-flex-jf-center dp-flex\">\n              <Button htmlType=\"submit\" type=\"primary\">\n                Save\n              </Button>\n              <Link to=\"/producers\" className=\"ant-btn\">\n                Back\n              </Link>\n              </div>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default Form.create()(Index);\n\n"]},"metadata":{},"sourceType":"module"}