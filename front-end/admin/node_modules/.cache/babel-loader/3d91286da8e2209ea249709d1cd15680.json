{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Staff/ChangePasswordPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Input, Form, Row, Col, Card, notification, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { changePasswordStaff } from \"../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar ChangePasswordPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePasswordPage, _Component);\n\n  function ChangePasswordPage(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePasswordPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePasswordPage).call(this, props));\n\n    _this.openNotificationWithIcon = function (type, message) {\n      notification[type]({\n        message: message\n      });\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"newPassword\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      var id = _this.props.match.params.id;\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var data = {\n            id: id,\n            password: values.newPassword\n          };\n          changePasswordStaff(data).then(function (res) {\n            _this.openNotificationWithIcon(\"success\", \"Update password success\");\n\n            _this.props.history.replace(\"/staffs/detail/\".concat(id));\n          }).catch(function (ex) {\n            _this.openNotificationWithIcon(\"error\", \"Update staff password fail.\");\n          });\n        }\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ChangePasswordPage, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Staff Change Password\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, getFieldDecorator(\"newPassword\", {\n        rules: [{\n          required: true,\n          message: \"Please input your New Password!\"\n        }, {\n          pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n          message: \"Wrong format!\"\n        }, {\n          min: 5,\n          max: 20,\n          message: \"Password must be between 5 and 20 characters\"\n        }]\n      })(React.createElement(Input.Password, {\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, getFieldDecorator(\"confirmPassword\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Confirm Password!\"\n        }, {\n          pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n          message: \"Wrong format!\"\n        }, {\n          min: 5,\n          max: 20,\n          message: \"Password must be between 5 and 20 characters\"\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input.Password, {\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Change Password\"), React.createElement(Link, {\n        to: \"/staffs\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Back\")))))));\n    }\n  }]);\n\n  return ChangePasswordPage;\n}(Component);\n\nexport default Form.create()(ChangePasswordPage);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Staff/ChangePasswordPage/index.js"],"names":["React","Component","Input","Form","Row","Col","Card","notification","Button","Link","changePasswordStaff","ChangePasswordPage","props","openNotificationWithIcon","type","message","formItemLayout","labelCol","sm","span","wrapperCol","compareToFirstPassword","rule","value","callback","form","getFieldValue","handleSubmit","e","id","match","params","preventDefault","validateFields","err","values","data","password","newPassword","then","res","history","replace","catch","ex","state","getFieldDecorator","rules","required","pattern","RegExp","min","max","validator","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, Form, Row, Col, Card, notification, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { changePasswordStaff } from \"../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass ChangePasswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  openNotificationWithIcon = (type, message) => {\n    notification[type]({\n      message: message\n    });\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"newPassword\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  handleSubmit = e => {\n    const { id } = this.props.match.params;\n\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const data = {\n          id: id,\n          password: values.newPassword\n        };\n\n        changePasswordStaff(data)\n          .then(res => {\n            this.openNotificationWithIcon(\"success\", \"Update password success\");\n            this.props.history.replace(`/staffs/detail/${id}`);\n          })\n          .catch(ex => {\n            this.openNotificationWithIcon(\n              \"error\",\n              \"Update staff password fail.\"\n            );\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <div>\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Staff Change Password</h3>\n        </div>\n        <Row>\n          <Col span={24}>\n            <Card>\n              <Form {...this.formItemLayout} onSubmit={this.handleSubmit}>\n                <Form.Item label=\"New Password\">\n                  {getFieldDecorator(\"newPassword\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your New Password!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n                        message: \"Wrong format!\"\n                      },\n                      {\n                        min: 5,\n                        max: 20,\n                        message: \"Password must be between 5 and 20 characters\"\n                      }\n                    ]\n                  })(<Input.Password placeholder=\"New Password\" />)}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\">\n                  {getFieldDecorator(\"confirmPassword\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your Confirm Password!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n                        message: \"Wrong format!\"\n                      },\n                      {\n                        min: 5,\n                        max: 20,\n                        message: \"Password must be between 5 and 20 characters\"\n                      },\n                      {\n                        validator: this.compareToFirstPassword\n                      }\n                    ]\n                  })(<Input.Password placeholder=\"Confirm Password\" />)}\n                </Form.Item>\n                <div className=\"dp-flex-jf-center dp-flex\">\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Change Password\n                  </Button>\n                  <Link to=\"/staffs\" className=\"ant-btn\">\n                    Back\n                  </Link>\n                </div>\n              </Form>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ChangePasswordPage);\n"]},"metadata":{},"sourceType":"module"}