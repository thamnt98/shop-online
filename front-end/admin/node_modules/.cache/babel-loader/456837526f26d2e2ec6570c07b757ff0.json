{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/containers/Sidebar/SidebarLogo.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { onNavStyleChange, toggleCollapsedSideNav } from \"appRedux/actions/Setting\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../constants/ThemeSetting\";\n\nvar SidebarLogo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SidebarLogo, _Component);\n\n  function SidebarLogo() {\n    _classCallCheck(this, SidebarLogo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SidebarLogo).apply(this, arguments));\n  }\n\n  _createClass(SidebarLogo, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          width = _this$props.width,\n          themeType = _this$props.themeType,\n          navCollapsed = _this$props.navCollapsed;\n      var navStyle = this.props.navStyle;\n\n      if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\n        navStyle = NAV_STYLE_DRAWER;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gx-layout-sider-header\",\n        style: {\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR ? React.createElement(\"div\", {\n        className: \"gx-linebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"gx-icon-btn icon icon-\".concat(navStyle === NAV_STYLE_MINI_SIDEBAR ? \"menu-unfold\" : \"menu-fold\", \" \").concat(themeType !== THEME_TYPE_LITE ? \"gx-text-white\" : \"\"),\n        onClick: function onClick() {\n          if (navStyle === NAV_STYLE_DRAWER) {\n            _this.props.toggleCollapsedSideNav(!navCollapsed);\n          } else if (navStyle === NAV_STYLE_FIXED) {\n            _this.props.onNavStyleChange(NAV_STYLE_MINI_SIDEBAR);\n          } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n            _this.props.toggleCollapsedSideNav(!navCollapsed);\n          } else {\n            _this.props.onNavStyleChange(NAV_STYLE_FIXED);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : null, React.createElement(Link, {\n        to: \"/\",\n        className: \"gx-site-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR && width >= TAB_SIZE ? React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/w-logo.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }) : themeType === THEME_TYPE_LITE ? React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/logo-white.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"assets/images/logo_playmountain2.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SidebarLogo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var navStyle = settings.navStyle,\n      themeType = settings.themeType,\n      width = settings.width,\n      navCollapsed = settings.navCollapsed;\n  return {\n    navStyle: navStyle,\n    themeType: themeType,\n    width: width,\n    navCollapsed: navCollapsed\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onNavStyleChange: onNavStyleChange,\n  toggleCollapsedSideNav: toggleCollapsedSideNav\n})(SidebarLogo);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/containers/Sidebar/SidebarLogo.js"],"names":["React","Component","connect","Link","onNavStyleChange","toggleCollapsedSideNav","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","SidebarLogo","props","width","themeType","navCollapsed","navStyle","overflow","require","mapStateToProps","settings"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  onNavStyleChange,\r\n  toggleCollapsedSideNav\r\n} from \"appRedux/actions/Setting\";\r\nimport {\r\n  NAV_STYLE_DRAWER,\r\n  NAV_STYLE_FIXED,\r\n  NAV_STYLE_MINI_SIDEBAR,\r\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n  TAB_SIZE,\r\n  THEME_TYPE_LITE\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nclass SidebarLogo extends Component {\r\n  render() {\r\n    const { width, themeType, navCollapsed } = this.props;\r\n    let { navStyle } = this.props;\r\n    if (width < TAB_SIZE && navStyle === NAV_STYLE_FIXED) {\r\n      navStyle = NAV_STYLE_DRAWER;\r\n    }\r\n    return (\r\n      <div className=\"gx-layout-sider-header\" style={{ overflow: \"hidden\" }}>\r\n        {navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR ? (\r\n          <div className=\"gx-linebar\">\r\n            <i\r\n              className={`gx-icon-btn icon icon-${\r\n                navStyle === NAV_STYLE_MINI_SIDEBAR\r\n                  ? \"menu-unfold\"\r\n                  : \"menu-fold\"\r\n              } ${themeType !== THEME_TYPE_LITE ? \"gx-text-white\" : \"\"}`}\r\n              onClick={() => {\r\n                if (navStyle === NAV_STYLE_DRAWER) {\r\n                  this.props.toggleCollapsedSideNav(!navCollapsed);\r\n                } else if (navStyle === NAV_STYLE_FIXED) {\r\n                  this.props.onNavStyleChange(NAV_STYLE_MINI_SIDEBAR);\r\n                } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\r\n                  this.props.toggleCollapsedSideNav(!navCollapsed);\r\n                } else {\r\n                  this.props.onNavStyleChange(NAV_STYLE_FIXED);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <Link to=\"/\" className=\"gx-site-logo\">\r\n          {navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR &&\r\n          width >= TAB_SIZE ? (\r\n            <img alt=\"\" src={require(\"assets/images/w-logo.png\")} />\r\n          ) : themeType === THEME_TYPE_LITE ? (\r\n            <img alt=\"\" src={require(\"assets/images/logo-white.png\")} />\r\n          ) : (\r\n            <img alt=\"\" src={require(\"assets/images/logo_playmountain2.png\")} />\r\n          )}\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { navStyle, themeType, width, navCollapsed } = settings;\r\n  return { navStyle, themeType, width, navCollapsed };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    onNavStyleChange,\r\n    toggleCollapsedSideNav\r\n  }\r\n)(SidebarLogo);\r\n"]},"metadata":{},"sourceType":"module"}