{"ast":null,"code":"import _defineProperty from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Admin/ChangePasswordPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Input, Form, Button, Row, Col, AutoComplete, Card } from \"antd\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { notification } from \"antd\";\nimport { changePassword } from \"./../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar ChangePassWord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassWord, _Component);\n\n  function ChangePassWord(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassWord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassWord).call(this, props));\n\n    _this.handleChange = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          var data = {\n            currentPassword: _this.state.currentPassword,\n            newPassword: _this.state.newPassword,\n            confirmPassword: _this.state.confirmPassword\n          };\n          changePassword(data).then(function (res) {\n            if (res.status === 200) {\n              _this.openNotificationWithIcon(\"success\", \"Change password success!\", \"Your account has been logged out from other login sessions\");\n            }\n\n            _this.setState({\n              redirect: true\n            });\n          }).catch(function (e) {\n            _this.openNotificationWithIcon(\"error\", \"Change password not success!\", e.response.data.message);\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.openNotificationWithIcon = function (type, message, description) {\n      notification[type]({\n        message: message,\n        description: description\n      });\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      confirmDirty: false,\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(ChangePassWord, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/admin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Change Password\")), React.createElement(Row, {\n        className: \"posi-rel\",\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 24,\n        className: \"pd-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        className: \"form-shape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Current Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, getFieldDecorator(\"currentPassword\", {\n        rules: [{\n          required: true,\n          message: \"Please input your current Password!\"\n        }, {\n          pattern: new RegExp(\"^([a-zA-Z0-9]*$)\"),\n          message: \"Wrong format!\"\n        }, {\n          min: 5,\n          max: 20,\n          message: \"Password must be between 5 and 20 characters\"\n        }]\n      })(React.createElement(Input.Password, {\n        name: \"currentPassword\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }, {\n          validator: this.validateToNextPassword\n        }, {\n          pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n          message: \"Wrong format!\"\n        }, {\n          min: 5,\n          max: 20,\n          message: \"Password must be between 5 and 20 characters\"\n        }]\n      })(React.createElement(Input.Password, {\n        name: \"newPassword\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, getFieldDecorator(\"confirm\", {\n        rules: [{\n          required: true,\n          message: \"Please input your confirm password!\"\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input.Password, {\n        onBlur: this.handleConfirmBlur,\n        name: \"confirmPassword\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/admin\",\n        className: \"ant-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return ChangePassWord;\n}(Component);\n\nexport default Form.create()(ChangePassWord);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Admin/ChangePasswordPage/index.js"],"names":["React","Component","Input","Form","Button","Row","Col","AutoComplete","Card","Link","Redirect","notification","changePassword","ChangePassWord","props","handleChange","e","name","target","value","setState","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","data","currentPassword","state","newPassword","confirmPassword","then","res","status","openNotificationWithIcon","redirect","catch","response","message","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","type","description","formItemLayout","labelCol","sm","span","wrapperCol","getFieldDecorator","rules","required","pattern","RegExp","min","max","validator","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, Form, Button, Row, Col, AutoComplete, Card } from \"antd\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { notification } from \"antd\";\nimport { changePassword } from \"./../../../service/handleRequest\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass ChangePassWord extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      redirect: false\n    };\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const data = {\n          currentPassword: this.state.currentPassword,\n          newPassword: this.state.newPassword,\n          confirmPassword: this.state.confirmPassword\n        };\n        changePassword(data)\n          .then(res => {\n            if (res.status === 200) {\n              this.openNotificationWithIcon(\n                \"success\",\n                \"Change password success!\",\n                \"Your account has been logged out from other login sessions\"\n              );\n            }\n            this.setState({\n              redirect: true\n            });\n          })\n          .catch(e => {\n            this.openNotificationWithIcon(\n              \"error\",\n              \"Change password not success!\",\n              e.response.data.message\n            );\n          });\n      }\n    });\n  };\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n  openNotificationWithIcon = (type, message, description) => {\n    notification[type]({\n      message: message,\n      description: description\n    });\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    if (this.state.redirect) {\n      return <Redirect to={\"/admin\"} />;\n    }\n\n    return (\n      <div>\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Change Password</h3>\n        </div>\n\n        <Row className=\"posi-rel\" type=\"flex\" justify=\"center\">\n          <Col span={24} className=\"pd-0\">\n            <Card>\n              <Form {...this.formItemLayout} className=\"form-shape\">\n                <Form.Item label=\"Current Password\">\n                  {getFieldDecorator(\"currentPassword\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your current Password!\"\n                      },\n                      {\n                        pattern: new RegExp(\"^([a-zA-Z0-9]*$)\"),\n                        message: \"Wrong format!\"\n                      },\n                      {\n                        min: 5,\n                        max: 20,\n                        message: \"Password must be between 5 and 20 characters\"\n                      }\n                    ]\n                  })(\n                    <Input.Password\n                      name=\"currentPassword\"\n                      onChange={this.handleChange}\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"Password\" hasFeedback>\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your password!\"\n                      },\n                      {\n                        validator: this.validateToNextPassword\n                      },\n                      {\n                        pattern: new RegExp(\"^([a-zA-z0-9]*$)\"),\n                        message: \"Wrong format!\"\n                      },\n                      {\n                        min: 5,\n                        max: 20,\n                        message: \"Password must be between 5 and 20 characters\"\n                      }\n                    ]\n                  })(\n                    <Input.Password\n                      name=\"newPassword\"\n                      onChange={this.handleChange}\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" hasFeedback>\n                  {getFieldDecorator(\"confirm\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your confirm password!\"\n                      },\n                      {\n                        validator: this.compareToFirstPassword\n                      }\n                    ]\n                  })(\n                    <Input.Password\n                      onBlur={this.handleConfirmBlur}\n                      name=\"confirmPassword\"\n                      onChange={this.handleChange}\n                    />\n                  )}\n                </Form.Item>\n              </Form>\n              <div className=\"dp-flex-jf-center dp-flex\">\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={this.handleSubmit}\n                >\n                  Save\n                </Button>\n                <Link to=\"/admin\" className=\"ant-btn\">\n                  Back\n                </Link>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ChangePassWord);\n"]},"metadata":{},"sourceType":"module"}