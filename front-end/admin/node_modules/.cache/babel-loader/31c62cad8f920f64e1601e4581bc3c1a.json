{"ast":null,"code":"import _defineProperty from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Size/SizeEditPage/index.js\";\nimport React, { Component } from \"react\";\nimport { Input, Form, Button, Card, Row, Col, AutoComplete } from \"antd\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { notification } from \"antd\";\nimport { getSizeById, sizeEdit } from \"./../../../service/handleRequest\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"./index.css\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar ChangePassWord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangePassWord, _Component);\n\n  function ChangePassWord(props) {\n    var _this;\n\n    _classCallCheck(this, ChangePassWord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangePassWord).call(this, props));\n    _this.styleLoader = {\n      position: \"sticky\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      zIndex: \"2\",\n      background: \"#fff\"\n    };\n\n    _this.handleChange = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var id = _this.props.match.params.id;\n          sizeEdit(values, id).then(function (res) {\n            if (res.status == 200) {\n              _this.openNotificationWithIcon(\"success\", \"Edit size success!\", \"\");\n\n              _this.setState({\n                redirect: true\n              });\n            }\n          }).catch(function (res) {\n            if (res.response.status === 422) {\n              _this.openNotificationWithIcon(\"error\", \"Edit size not success!\", \"The size name has already been taken!\");\n            } else {\n              _this.openNotificationWithIcon(\"error\", \"Edit size not success!\");\n            }\n          });\n        }\n      });\n    };\n\n    _this.openNotificationWithIcon = function (type, message, description) {\n      notification[type]({\n        message: message,\n        description: description\n      });\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n    _this.state = {\n      sizes: [],\n      sizeName: \"\",\n      sizeDescription: \"\",\n      redirect: false,\n      loader: true\n    };\n    return _this;\n  }\n\n  _createClass(ChangePassWord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = this.props.match.params.id;\n      getSizeById(id).then(function (res) {\n        _this2.setState({\n          sizes: res.data,\n          loader: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          sizes = _this$state.sizes,\n          loader = _this$state.loader;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/sizes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"gx-loader-view\",\n        style: this.styleLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })) : null, React.createElement(\"div\", {\n        className: \"title-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"text-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Edit Size\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        className: \"form-shape\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Size Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, getFieldDecorator(\"size_name\", {\n        initialValue: sizes.size_name,\n        rules: [{\n          required: true,\n          message: \"Please input your size name!\"\n        }]\n      })(React.createElement(Input, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Size Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, getFieldDecorator(\"size_description\", {\n        initialValue: sizes.size_description\n      })(React.createElement(Input, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onSubmit,\n        htmlType: \"submit\",\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/sizes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Back\"))))));\n    }\n  }]);\n\n  return ChangePassWord;\n}(Component);\n\nexport default Form.create()(ChangePassWord);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Size/SizeEditPage/index.js"],"names":["React","Component","Input","Form","Button","Card","Row","Col","AutoComplete","Link","Redirect","notification","getSizeById","sizeEdit","CircularProgress","ChangePassWord","props","styleLoader","position","top","left","width","zIndex","background","handleChange","e","name","target","value","setState","onSubmit","preventDefault","form","validateFields","err","values","id","match","params","then","res","status","openNotificationWithIcon","redirect","catch","response","type","message","description","formItemLayout","labelCol","sm","span","wrapperCol","state","sizes","sizeName","sizeDescription","loader","data","getFieldDecorator","initialValue","size_name","rules","required","size_description","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Input, Form, Button, Card, Row, Col, AutoComplete } from \"antd\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { notification } from \"antd\";\nimport { getSizeById, sizeEdit } from \"./../../../service/handleRequest\";\nimport CircularProgress from \"components/CircularProgress/index\";\nimport \"./index.css\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass ChangePassWord extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sizes: [],\n      sizeName: \"\",\n      sizeDescription: \"\",\n      redirect: false,\n      loader: true\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    getSizeById(id).then(res => {\n      this.setState({\n        sizes: res.data,\n        loader: false\n      });\n    });\n  }\n\n  styleLoader = {\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    zIndex: \"2\",\n    background: \"#fff\"\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const id = this.props.match.params.id;\n        sizeEdit(values, id)\n          .then(res => {\n            if (res.status == 200) {\n              this.openNotificationWithIcon(\n                \"success\",\n                \"Edit size success!\",\n                \"\"\n              );\n              this.setState({ redirect: true });\n            }\n          })\n          .catch(res => {\n            if (res.response.status === 422) {\n              this.openNotificationWithIcon(\n                \"error\",\n                \"Edit size not success!\",\n                \"The size name has already been taken!\"\n              );\n            } else {\n              this.openNotificationWithIcon(\"error\", \"Edit size not success!\");\n            }\n          });\n      }\n    });\n  };\n\n  openNotificationWithIcon = (type, message, description) => {\n    notification[type]({\n      message: message,\n      description: description\n    });\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { sizes, loader } = this.state;\n    if (this.state.redirect) {\n      return <Redirect to={\"/sizes\"} />;\n    }\n\n    return (\n      <div>\n        {loader ? (\n          <div className=\"gx-loader-view\" style={this.styleLoader}>\n            <CircularProgress />\n          </div>\n        ) : null}\n\n        <div className=\"title-header\">\n          <h3 className=\"text-title\">Edit Size</h3>\n        </div>\n        <Card>\n          <Form\n            {...this.formItemLayout}\n            className=\"form-shape\"\n            onSubmit={this.onSubmit}\n          >\n            <Form.Item label=\"Size Name\">\n              {getFieldDecorator(\"size_name\", {\n                initialValue: sizes.size_name,\n                rules: [\n                  {\n                    required: true,\n                    message: \"Please input your size name!\"\n                  }\n                ]\n              })(<Input onChange={this.handleChange} />)}\n            </Form.Item>\n\n            <Form.Item label=\"Size Description\">\n              {getFieldDecorator(\"size_description\", {\n                initialValue: sizes.size_description\n              })(<Input onChange={this.handleChange} />)}\n            </Form.Item>\n            <Form.Item>\n              <Button onClick={this.onSubmit} htmlType=\"submit\" type=\"primary\">\n                Save\n              </Button>\n              <Link to=\"/sizes\">\n                <Button>Back</Button>\n              </Link>\n            </Form.Item>\n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Form.create()(ChangePassWord);\n"]},"metadata":{},"sourceType":"module"}