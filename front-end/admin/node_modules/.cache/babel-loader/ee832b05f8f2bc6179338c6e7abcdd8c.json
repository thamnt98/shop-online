{"ast":null,"code":"import _classCallCheck from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thamnt/Downloads/shop-online/front-end/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Product/ProductPage/uploadFile.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Form, Cascader, Button, Upload, Icon, message } from \"antd\";\nimport \"../../../styles/customerStyle/index.css\";\n\nvar UploadFile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadFile, _Component);\n\n  function UploadFile(props) {\n    var _this;\n\n    _classCallCheck(this, UploadFile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadFile).call(this, props));\n\n    _this.renderInitCascader = function (value) {\n      if (!value) return [];\n      return [value];\n    };\n\n    _this.formItemLayout = {\n      labelCol: {\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        sm: {\n          span: 16\n        }\n      }\n    };\n\n    _this.handleUpload = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n        }\n      });\n    };\n\n    _this.defaultSetting = {\n      name: \"file\",\n      multiple: true,\n      action: \"https://www.mocky.io/v2/5cc8019d3000009\",\n      headers: {\n        authorization: 'authorization-text'\n      },\n      onChange: function onChange(info) {\n        var status = info.file.status;\n\n        if (status !== \"uploading\") {\n          console.log(info.file, info.fileList);\n        }\n\n        if (status === \"done\") {\n          message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n        } else if (status === \"error\") {\n          message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n        }\n      }\n    };\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(UploadFile, [{\n    key: \"render\",\n    value: function render() {\n      var Dragger = Upload.Dragger;\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          onClose = _this$props.onClose;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(Modal, {\n        title: \"Upload file CSV\",\n        visible: visible,\n        onCancel: onClose,\n        footer: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, this.formItemLayout, {\n        onSubmit: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Store Name Avaliable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, getFieldDecorator(\"shop\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Store Name Avaliable.\"\n        }],\n        initialValue: this.renderInitCascader(1)\n      })(React.createElement(Cascader, {\n        options: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Supplier Name Avaliable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, getFieldDecorator(\"supplier\", {\n        rules: [{\n          type: \"array\",\n          required: true,\n          message: \"Please select your Supplier Name Avaliable.\"\n        }],\n        initialValue: this.renderInitCascader(1)\n      })(React.createElement(Cascader, {\n        options: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Dragger, Object.assign({}, this.defaultSetting, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"inbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"))), React.createElement(\"div\", {\n        className: \"dp-flex-jf-center dp-flex mt-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return UploadFile;\n}(Component);\n\nexport default Form.create({\n  name: \"upload\"\n})(UploadFile);","map":{"version":3,"sources":["/Users/thamnt/Downloads/shop-online/front-end/admin/src/routes/Product/ProductPage/uploadFile.js"],"names":["React","Component","Modal","Form","Cascader","Button","Upload","Icon","message","UploadFile","props","renderInitCascader","value","formItemLayout","labelCol","sm","span","wrapperCol","handleUpload","e","preventDefault","form","validateFields","err","values","console","log","defaultSetting","name","multiple","action","headers","authorization","onChange","info","status","file","fileList","success","error","state","Dragger","visible","onClose","getFieldDecorator","rules","type","required","initialValue","create"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsDC,OAAtD,QAAqE,MAArE;AACA,OAAO,yCAAP;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,UAKnBC,kBALmB,GAKE,UAAAC,KAAK,EAAI;AAC5B,UAAI,CAACA,KAAL,EAAY,OAAO,EAAP;AAEZ,aAAO,CAACA,KAAD,CAAP;AACD,KATkB;;AAAA,UAWnBC,cAXmB,GAWF;AACfC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADI,OADK;AAIfC,MAAAA,UAAU,EAAE;AACVF,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADM;AAJG,KAXE;;AAAA,UAoBnBE,YApBmB,GAoBJ,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKV,KAAL,CAAWW,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACRE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD;AACF,OAJD;AAKD,KA5BkB;;AAAA,UA8BnBG,cA9BmB,GA8BF;AACfC,MAAAA,IAAI,EAAE,MADS;AAEfC,MAAAA,QAAQ,EAAE,IAFK;AAGfC,MAAAA,MAAM,EAAE,yCAHO;AAIfC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE;AADV,OAJM;AAOfC,MAAAA,QAPe,oBAONC,IAPM,EAOA;AAAA,YACLC,MADK,GACMD,IAAI,CAACE,IADX,CACLD,MADK;;AAEb,YAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1BV,UAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACG,QAA5B;AACD;;AACD,YAAIF,MAAM,KAAK,MAAf,EAAuB;AACrB3B,UAAAA,OAAO,CAAC8B,OAAR,WAAmBJ,IAAI,CAACE,IAAL,CAAUR,IAA7B;AACD,SAFD,MAEO,IAAIO,MAAM,KAAK,OAAf,EAAwB;AAC7B3B,UAAAA,OAAO,CAAC+B,KAAR,WAAiBL,IAAI,CAACE,IAAL,CAAUR,IAA3B;AACD;AACF;AAjBc,KA9BE;AAEjB,UAAKY,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BA+CQ;AAAA,UACCC,OADD,GACanC,MADb,CACCmC,OADD;AAAA,wBAEsB,KAAK/B,KAF3B;AAAA,UAECgC,OAFD,eAECA,OAFD;AAAA,UAEUC,OAFV,eAEUA,OAFV;AAAA,UAGCC,iBAHD,GAGuB,KAAKlC,KAAL,CAAWW,IAHlC,CAGCuB,iBAHD;AAKP,aACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,iBADR;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,QAAQ,EAAEC,OAHZ;AAIE,QAAA,MAAM,EAAE,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD,oBAAU,KAAK9B,cAAf;AAA+B,QAAA,QAAQ,EAAE,KAAKK,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG0B,iBAAiB,CAAC,MAAD,EAAS;AACzBC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEvC,UAAAA,OAAO,EAAE;AAHX,SADK,CADkB;AAQzBwC,QAAAA,YAAY,EAAE,KAAKrC,kBAAL,CAAwB,CAAxB;AARW,OAAT,CAAjB,CASE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADH,CADF,EAaE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGiC,iBAAiB,CAAC,UAAD,EAAa;AAC7BC,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEvC,UAAAA,OAAO,EAAE;AAHX,SADK,CADsB;AAQ7BwC,QAAAA,YAAY,EAAE,KAAKrC,kBAAL,CAAwB,CAAxB;AARe,OAAb,CAAjB,CASE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADH,CAbF,EAyBE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,oBAAa,KAAKgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAJF,EAOE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAPF,CADF,CAzBF,EAwCE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAxCF,CANF,CADF;AAuDD;;;;EA/GsB1B,S;;AAkHzB,eAAeE,IAAI,CAAC8C,MAAL,CAAY;AAAErB,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAgCnB,UAAhC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Form, Cascader, Button, Upload, Icon, message } from \"antd\";\nimport \"../../../styles/customerStyle/index.css\";\n\nclass UploadFile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderInitCascader = value => {\n    if (!value) return [];\n\n    return [value];\n  };\n\n  formItemLayout = {\n    labelCol: {\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      sm: { span: 16 }\n    }\n  };\n\n  handleUpload = e => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(values);\n      }\n    });\n  };\n\n  defaultSetting = {\n    name: \"file\",\n    multiple: true,\n    action: \"https://www.mocky.io/v2/5cc8019d3000009\",\n    headers: {\n        authorization: 'authorization-text',\n    },\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList);\n      }\n      if (status === \"done\") {\n        message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n  };\n\n  render() {\n    const { Dragger } = Upload;\n    const { visible, onClose } = this.props;\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Modal\n        title=\"Upload file CSV\"\n        visible={visible}\n        onCancel={onClose}\n        footer={false}\n      >\n        <Form {...this.formItemLayout} onSubmit={this.handleUpload}>\n          <Form.Item label=\"Store Name Avaliable\">\n            {getFieldDecorator(\"shop\", {\n              rules: [\n                {\n                  type: \"array\",\n                  required: true,\n                  message: \"Please select your Store Name Avaliable.\"\n                }\n              ],\n              initialValue: this.renderInitCascader(1)\n            })(<Cascader options={[]} />)}\n          </Form.Item>\n          <Form.Item label=\"Supplier Name Avaliable\">\n            {getFieldDecorator(\"supplier\", {\n              rules: [\n                {\n                  type: \"array\",\n                  required: true,\n                  message: \"Please select your Supplier Name Avaliable.\"\n                }\n              ],\n              initialValue: this.renderInitCascader(1)\n            })(<Cascader options={[]} />)}\n          </Form.Item>\n          <div className=\"dp-flex-jf-center dp-flex\">\n            <Dragger {...this.defaultSetting}>\n              <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Support for a single or bulk upload. Strictly prohibit from\n                uploading company data or other band files\n              </p>\n            </Dragger>\n          </div>\n\n          <div className=\"dp-flex-jf-center dp-flex mt-10\">\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n          </div>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default Form.create({ name: \"upload\" })(UploadFile);\n"]},"metadata":{},"sourceType":"module"}